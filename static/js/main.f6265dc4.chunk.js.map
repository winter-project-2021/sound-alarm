{"version":3,"sources":["modules/LoginState.js","modules/loading.js","modules/sagaTemplate.js","modules/api.js","modules/PreferenceResult.js","modules/DetectingResult.js","components/lang.js","components/Guide.js","modules/ModalResult.js","modules/SoundList.js","modules/SensitivityResult.js","components/SoundListItem.js","components/SoundSetting.js","modules/TextList.js","components/TextListItem.js","components/TextSetting.js","components/Logout.js","components/Preference.js","components/Error.js","components/Login.js","components/Card.js","components/Loading.js","components/Modal.js","components/SensitivityModal.js","components/DetectingModal.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["UPDATE_Login","UPDATE_Logout","updateLogin","createAction","item","updateLogout","updateLoginState","handleActions","state","action","login","user","payload","name","imgURL","START_LOADING","FINISH_LOADING","startLoading","type","finishLoading","loading","createRequestSaga","prefix","request","SUCCESS","FAILURE","put","call","response","data","result","msg","popup","head","body","buttonNum","callback","headColor","btn1Color","btn2Color","btn1Text","btn2Text","END_POINT","process","preferenceSaga","SET_PREFERENCE","SET_LANG","POST_PREFERENCE","setPreference","postPreference","setLang","lang","postPreferenceSaga","setting","axios","takeLatest","preferenceReducer","sound","alarm","push","alarmpush","volume","alarmvolume","bell","alarmsound","error","detectingSaga","SET_OPEN","SET_RESULT","SET_CLOSE","GET_MATCH","setResult","value","setOpenDetecting","setCloseDetecting","getMatchServer","blob","getMatchSaga","post","setDetecting","open","detect","match","scoreFromServer","trans","ok","cancel","apply","init","start","detectStart","stop","sens","loginSuccess","loginFail","menu","guide","text","sensitivity","uploadFail","delete","logout","detecting","Guide","useSelector","className","setOpen","setModal","cancelCallback","btnText","click","soundSaga","ADD_ITEM","REMOVE_ITEM","UPDATE_ITEM","UPDATE_SENSITIVITY","SET_LIST","SET_ERROR","addItem","removeItem","id","updateItem","setList","list","updateSensitivity","setError","e","addItemSaga","headers","removeItemSaga","updateItemSaga","updateSensitivitySaga","updateSoundList","_id","JSON","stringify","Array","from","Uint8Array","buffer","score","soundList","concat","filter","audioid","map","sensitivitySaga","GET_SCORE_SERVER","setOpenSensitivity","getScoreServer","getScoreServerSaga","setSensitivity","accuracy","SoundListItem","props","order","clickItem","isClick","updateName","deleteName","setDelete","setUpdate","dispatch","useDispatch","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","margin","Tooltip","useState","inputName","setInputName","change","setChange","anchorEl","setAnchorEl","Boolean","handleClick","useCallback","currentTarget","handleClose","useEffect","document","getElementById","style","display","renderName","len","String","length","substring","deleteItem","clickUpdate","changeInput","target","onClick","onPlay","audio","url","URL","createObjectURL","Blob","parse","console","log","src","play","onStop","pause","changeVolume","newValue","volumeSlider","size","Slider","onChange","defaultValue","aria-labelledby","width","marginLeft","marginRight","min","max","renderPlay","title","interactive","placement","disableFocusListener","disableTouchListener","clickSensitivity","Menu","keepMounted","onClose","PaperProps","maxHeight","MenuItem","SoundSetting","FILE_LIMIT","useMemo","USER_ID","MAX_AUDIO","DEFAULT_FILENAME","setItem","update","isDelete","fileName","setFileName","alias","setAlias","setBlob","clickAway","parent","parentNode","removeEventListener","addEventListener","i","renderList","ele","uploadAudio","selectFile","files","writeName","addToList","FormData","append","marginTop","htmlFor","accept","placeholder","textSaga","setTextList","updateTextList","textList","textid","TextListItem","renderButton","TextSetting","MAX_TEXT","renderTextAdd","clientId","Logout","onSuccess","buttonText","onLogoutSuccess","Preference","currentPreference","preference","setCurPreference","bellTypes","recorder","setRecorder","isRecord","setIsRecord","handleChange","event","clickPlay","prefer","setProperty","checked","Notification","requestPermission","then","permission","setBell","applyPreference","initPreference","audioStart","audioCtx","window","AudioContext","webkitAudioContext","navigator","getUserMedia","video","stream","context","getTracks","source","createMediaStreamSource","dest","destination","biquadFilter","createBiquadFilter","gain","createGain","frequency","setValueAtTime","currentTime","Q","connect","err","audioStop","close","startMicTest","disableRipple","Grid","container","spacing","xs","Select","minWidth","inputProps","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","activeBoxShadow","height","Error","Login","res","userInfo","profileObj","imageUrl","username","googleId","stt","t","a","pref","language","toLowerCase","refreshTokenSetup","onFailure","refreshTiming","tokenObj","expires_in","refreshToken","reloadAuthResponse","newAuthRes","localStorage","id_token","setTimeout","alt","cookiePolicy","Card","setMenu","classes","setClasses","userName","imageURL","menuList","renderMenu","selectMenu","newClasses","renderSideMenu","selectLang","renderHeader","renderDetecting","Loading","Modal","clickOk","clickCancel","renderModal","SensitivityModal","curScore","setCurScore","preventLoad","setPrevent","marks","label","findId","itemId","isNaN","valuetext","onChangeSlide","createMediaStreamDestination","mediaRecorder","MediaRecorder","chunks","ondataavailable","evt","onstop","arrayBuffer","decodeAudioData","b","wav","toWav","form","onMicClick","renderRecord","renderStop","Math","round","Typography","gutterBottom","getAriaValueText","valueLabelDisplay","step","DetectingModal","isStart","setIsStart","timeoutId","setTimeoutId","first","setFirst","speech","setSpeech","detectName","setDetectName","clearTimeout","clickESC","timeId","stopStt","startSTT","recognition","SpeechRecognition","webkitSpeechRecognition","interimResults","onresult","split","results","transcript","join","clickDetect","testAlarm","options","icon","dir","setDetected","onend","renderTLI","idx","renderSLI","renderTextList","renderSoundList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","config","key","storage","rootReducer","combineReducers","all","persistReducer","createMuiTheme","typography","fontFamily","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","persistor","persistStore","run","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f6265dc4.chunk.js","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\n\r\n/*\r\n    Login 상태를 위한 redux\r\n*/\r\n\r\nconst UPDATE_Login = 'LoginState/UPDATE_Login';\r\nconst UPDATE_Logout = 'LoginState/UPDATE_Logout';\r\n\r\nexport const updateLogin = createAction(UPDATE_Login, item => item);\r\nexport const updateLogout = createAction(UPDATE_Logout, item => item);\r\n\r\nconst initialState = {\r\n    login: false,\r\n    user: {name: '', imgURL: ''},\r\n}\r\n\r\nconst updateLoginState = handleActions(\r\n    {\r\n        [UPDATE_Login]: (state, action) => (\r\n            {\r\n                ...state,\r\n                login: true,\r\n                user: action.payload,\r\n            }\r\n        ),\r\n\r\n        [UPDATE_Logout]: (state) => (\r\n            {\r\n                ...state,\r\n                login: false,\r\n                user: {name: '', imgURL: ''},\r\n            }\r\n        ),\r\n    },\r\n\r\n    initialState,\r\n)\r\n\r\nexport default updateLoginState;","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(START_LOADING, type => type);\r\nexport const finishLoading = createAction(FINISH_LOADING, type => type);\r\n\r\nconst initialState = {\r\n    loading: false,\r\n};\r\n\r\nconst loading = handleActions(\r\n  {\r\n      [START_LOADING]: (state, action) => ({\r\n          ...state,\r\n          loading: true,\r\n          //[action.payload]: true,\r\n      }),\r\n\r\n      [FINISH_LOADING]: (state, action) => ({\r\n          ...state,\r\n          loading: false,\r\n          //[action.payload]: false,\r\n      }),\r\n  },\r\n  \r\n  initialState,\r\n);\r\n\r\nexport default loading;","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from './loading';\r\n\r\nexport default function createRequestSaga (prefix, type, request) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${prefix}/FAILURE`;\r\n    return function* (action) {\r\n        // 우선 로딩중에 true를 넘김\r\n        if(prefix !== 'DetectingResult')\r\n            yield put(startLoading(type));\r\n        \r\n        try {\r\n            // request를 이용해서 서버랑 통신\r\n            const response = yield call(request, action.payload);\r\n            // 정상적으로 성공하면 성공한 값을 redux로 넘김\r\n            //console.log(response);\r\n            if(response.data.result !== 'success'){\r\n                yield put({\r\n                    type: FAILURE,\r\n                    payload: response.data.msg,\r\n                });\r\n\r\n                const popup = {\r\n                    head: \"Error!\",\r\n                    body: response.data,\r\n                    buttonNum: 1,\r\n                    callback: () => {},\r\n                    headColor: '#ff3547',\r\n                    btn1Color: '#f2f3f4',\r\n                    btn2Color: null,\r\n                    btn1Text: '#000000',\r\n                    btn2Text: null,\r\n                };\r\n                \r\n                yield put({\r\n                    type: 'ModalResult/SET_OPEN',\r\n                    payload: popup,\r\n                });\r\n            }\r\n            else {\r\n                \r\n                yield put({\r\n                    type: SUCCESS,\r\n                    payload: response.data,\r\n                });\r\n            }\r\n            \r\n        } catch (e){\r\n            // 통신에 실패하여 에러가 나면 error를 리덕스로 넘김\r\n            yield put({\r\n                type: FAILURE,\r\n                payload: e\r\n            });\r\n\r\n\r\n        }\r\n        finally {\r\n            // 로딩 종료\r\n            yield put(finishLoading(type));\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst END_POINT = `${process.env.REACT_APP_END_POINT}`;\r\n\r\n// 비동기 작업 함수\r\nexport const addSoundItem = (item) => {\r\n    return axios.post(`${END_POINT}/audio`, item, { headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n    }});\r\n}\r\n\r\nexport const removeSoundItem = (item) => {\r\n    return axios.delete(`${END_POINT}/audio/`, item);\r\n}\r\n\r\nexport const updateSoundItem = (item) => {\r\n    return axios.put(`${END_POINT}/audio`, item);\r\n}\r\n\r\nexport const updateSetting = (setting) => {\r\n    return axios.put(`${END_POINT}/setting`, setting);\r\n}\r\n\r\nexport const updateSoundSensitivity = (item) => {\r\n    return axios.put(`${END_POINT}/audio`, item);\r\n}\r\n\r\nexport const getUserinfo = (username) => {\r\n    return axios.post(`${END_POINT}/login`, username);\r\n}\r\n\r\nexport const addTextItem = (item) => {\r\n    return axios.post(`${END_POINT}/text`, item, { headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n    }});\r\n};\r\n\r\nexport const removeTextItem = (item) => {\r\n    return axios.delete(`${END_POINT}/text`, item);\r\n}\r\n\r\nexport const updateTextItem = (item) => {\r\n    return axios.put(`${END_POINT}/text`, item);\r\n}\r\n\r\nexport const getScore = (item) => {\r\n    return axios.post(`${END_POINT}/audio/test`, item);\r\n}\r\n\r\nexport const getMatch = (item) => {\r\n    return axios.post(`${END_POINT}/audio/test`, item);\r\n}","import { takeLatest } from 'redux-saga/effects';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from './sagaTemplate';\r\nimport { updateSetting } from './api';\r\n\r\n// 설정값 세팅을 위한 액션\r\nconst SET_PREFERENCE = 'PreferenceResult/SET_PREFERENCE';\r\nconst SET_LANG = 'PreferenceResult/SET_LANG';\r\n\r\n// 서버 통신 관련 action\r\nconst POST_PREFERENCE = 'PreferenceResult/POST_PREFERENCE';\r\nconst POST_PREFERENCE_SUCCESS = 'PreferenceResult/POST_PREFERENCE_SUCCESS';\r\nconst POST_FAILURE = 'PreferenceResult/FAILURE';\r\n\r\nexport const setPreference = createAction(SET_PREFERENCE, state => state);\r\nexport const postPreference = createAction(POST_PREFERENCE, state => state);\r\nexport const setLang = createAction(SET_LANG, lang => lang);\r\n\r\nconst postPreferenceSaga = createRequestSaga('PreferenceResult', POST_PREFERENCE, updateSetting);\r\n\r\nexport function* preferenceSaga() {\r\n    yield takeLatest(POST_PREFERENCE, postPreferenceSaga);\r\n}\r\n\r\nconst initialState = {\r\n    sound: true,\r\n    push: false,\r\n    lang: 'ko',\r\n    volume: 50,\r\n    bell: '0',\r\n    error: false,\r\n};\r\n\r\nconst preferenceReducer = handleActions(\r\n    {\r\n        [SET_PREFERENCE]: (state, action) => ({\r\n            ...state,\r\n            sound: action.payload.alarm,\r\n            push: action.payload.alarmpush,\r\n            //lang: action.payload.language,\r\n            volume: action.payload.alarmvolume,\r\n            bell: action.payload.alarmsound,\r\n            error: false,\r\n        }),\r\n\r\n        [POST_PREFERENCE_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            sound: action.payload.alarm,\r\n            push: action.payload.alarmpush,\r\n            //lang: action.payload.language,\r\n            volume: action.payload.alarmvolume,\r\n            bell: action.payload.alarmsound,\r\n            error: false,\r\n        }),\r\n\r\n        [POST_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            ...action.payload,\r\n            error: true,\r\n        }),\r\n\r\n        [SET_LANG]: (state, action) => ({\r\n            ...state,\r\n            lang: action.payload,\r\n        }),\r\n    },\r\n\r\n    initialState,\r\n);\r\n\r\nexport default preferenceReducer;","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from './sagaTemplate';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport { getMatch } from './api';\r\n\r\nconst SET_OPEN = 'DetectingResult/SET_OPEN';\r\nconst SET_RESULT = 'DetectingResult/SET_RESULT';\r\nconst SET_CLOSE = 'DetectingResult/SET_CLOSE';\r\nconst GET_MATCH = 'DetectingResult/GET_MATCH';\r\nconst GET_MATCH_SUCCESS = 'DetectingResult/GET_MATCH_SUCCESS';\r\nconst OP_FAILURE = 'DetectingResult/OP_FAILURE';\r\n\r\nexport const setResult = createAction(SET_RESULT, value => value);\r\nexport const setOpenDetecting = createAction(SET_OPEN, value => value);\r\nexport const setCloseDetecting = createAction(SET_CLOSE)\r\nexport const getMatchServer = createAction(GET_MATCH, blob => blob);\r\n\r\nconst getMatchSaga = createRequestSaga('DetectingResult', GET_MATCH, getMatch);\r\n\r\nexport function* detectingSaga() {\r\n    yield takeLatest(GET_MATCH, getMatchSaga);\r\n}\r\n\r\n// Modal 열고 닫기에는 open만 사용되었음. 나머지 수정가능\r\n\r\nconst initialState = {\r\n    result: false,\r\n    open: false,\r\n    detect: false,\r\n    scoreFromServer: null,\r\n    name: \"\",\r\n    error: false,\r\n}\r\n\r\nconst setDetecting = handleActions(\r\n    {\r\n        [SET_OPEN]: (state) => ({\r\n            ...state,\r\n            open: true,\r\n            detect: false,\r\n            error: false,\r\n        }),\r\n\r\n        [SET_CLOSE]: (state) => ({\r\n            ...state,\r\n            open: false,\r\n            error: false,\r\n        }),\r\n\r\n        [SET_RESULT]: (state, action) => ({\r\n            ...state,\r\n            result: action.payload.match,\r\n            open: true,\r\n            detect: action.payload.match,\r\n            name: action.payload.name,\r\n            error: false,\r\n        }),\r\n\r\n        [GET_MATCH_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            detect: action.payload.match,\r\n            name: action.payload.match ? action.payload.name : state.name,\r\n        }),\r\n\r\n        [OP_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            ...action.payload,\r\n            error: true,\r\n        }),\r\n    },\r\n\r\n    initialState,\r\n);\r\n\r\nexport default setDetecting;","const trans = {\r\n    'ko': {\r\n        ok: '확인',\r\n        cancel: '취소',\r\n        apply: '적용',\r\n        init: '초기화',\r\n        start: '시작',\r\n        detectStart: '감지시작',\r\n        stop: '정지',\r\n        name: '이름 변경',\r\n        sens: '민감도 변경',\r\n        loginSuccess: ['로그인 성공', '환영합니다! ', '님'],\r\n        loginFail: ['로그인 실패', '로그인에 실패하였습니다.'],\r\n        menu: ['가이드', '텍스트 설정', '소리 설정', '설정'],\r\n        guide: ['Sound Alarm은 미리 등록한 소리와 단어를 마이크를 통해 감지를 해서 알림을 보내주는 서비스입니다.',\r\n                '텍스트 등록 방법',\r\n                '감지되길 원하는 단어를 한글로 입력하고 추가버튼을 눌러 등록합니다.',\r\n                '(숫자나 영어는 인식이 불가능합니다.)',\r\n                '사운드 등록 방법',\r\n                '1. 원하는 사운드를 스마트폰등을 이용하여 녹음을 합니다.',\r\n                '(인식 정확도를 높이기 위해서는 최대한 잡음 없이 녹음이 되어야 합니다.)',\r\n                '2. 녹음된 파일을 \"파일 업로드\" 버튼을 눌러서 선택합니다.',\r\n                '3. \"파일 업로드\" 오른쪽에 있는 입력창을 통해 등록하고자 하는 이름으로 변경을 하신 뒤 추가버튼을 누릅니다.',\r\n                '4. 마이크가 최대한 밖의 소리를 수음할 수 있도록 세팅한 뒤 민감도 설정의 녹음버튼을 누릅니다.',\r\n                '(설정탭의 마이크 테스트를 통해서 소리가 정상적으로 수음되는지 확인할 수 있습니다.)',\r\n                '5. 3초이상 녹음한 뒤 정지버튼을 누릅니다. (일반적인 환경에서의 점수를 측정하는 과정입니다.)',\r\n                '6. 측정된 현재 점수로 민감도를 조정합니다.',\r\n                '7. 녹음된 파일을 재생할 준비를 한 뒤 녹음 버튼을 다시 누릅니다.',\r\n                '8. 녹음된 파일을 최대한 들리는 것과 유사한 볼륨으로 3초이상 녹음한 뒤 정지버튼을 누릅니다.',\r\n                '9. 측정된 현재 점수와 기존의 민감도 점수 사이의 적당한 값을 지정합니다.',\r\n                '10. 민감도 설정을 완료한 후, 감지를 시작한 뒤 녹음된 파일을 재생해보면서 적당한 민감도를 설정해줍니다.'],\r\n        text: ['새로운 텍스트를 추가해 주세요!', '이름을 입력해 주세요', '텍스트는 최대 10개까지 등록할 수 있습니다', '텍스트는 한글만 인식할 수 있습니다.'],\r\n        sound: ['새로운 소리 파일을 추가해 주세요!', '파일 업로드', '이름을 입력해 주세요', '파일은 최대 5개까지 등록할 수 있습니다.', \r\n                '파일 하나의 최대 용량은 300KB 입니다.'],\r\n        setting: ['알림 소리 설정', '알림 푸쉬 설정', '마이크 테스트', '로그아웃', '벨소리 설정', '알람 1', '알람 2', '알람 3'],\r\n        sensitivity: ['민감도', '의 민감도 설정', '현재 점수', '측정 전 입니다.', '민감도 설정', \r\n                      '녹음 버튼을 클릭하여 현재 마이크를 통해 소리를 5초 이상 입력하고 녹음을 종료합니다.',\r\n                      '민감도를 높일수록 소리의 구분이 정확해지지만 인식되는 빈도가 낮아질 수 있습니다.', \r\n                      '만약 출력되는 점수가 60 이하가 반복된다면, 녹음 파일이나 현재 기기를 조정할 것을 추천드립니다.'],\r\n        uploadFail: ['업로드 실패', '같은 이름으로 등록할 수 없습니다!', '', '최대 10개의 문자만 등록할 수 있습니다!', '파일의 용량이 큽니다! 300kb 이하의 파일을 업로드하세요!', \r\n                    '최대 5개의 파일만 등록할 수 있습니다!', ],\r\n        delete: ['삭제하시겠습니까?', '을(를) 정말로 삭제하시겠습니까?,', '삭제'],\r\n        logout: ['로그아웃 성공', '로그아웃에 성공하였습니다'],\r\n        detecting: ['감지 중입니다.', '이(가) 감지 되었습니다!', '음성 목록', '텍스트 목록'],\r\n        push: [\"이(가) 감지되었습니다!!\", \"감지되었습니다!\"],\r\n    },\r\n    'en': {\r\n        ok: 'OK',\r\n        cancel: 'Cancel',\r\n        apply: 'Apply',\r\n        init: 'Initialize',\r\n        start: 'Start',\r\n        detectStart: 'Start',\r\n        stop: 'Stop',\r\n        name: 'Rename',\r\n        sens: 'Modify Sensitivity',\r\n        loginSuccess: ['Login Successful', 'Welcome! ', ''],\r\n        loginFail: ['Login Failed', 'Login Faiiled'],\r\n        menu: ['Guide', 'Text', 'Sound', 'Setting'],\r\n        guide: ['Sound Alarm is a service that detects pre-registered sounds and words through a microphone and sends notifications.',\r\n                'To register text',\r\n                'Type the word you want to be detected in English and press the Add button to register.',\r\n                '(Only English can be recognized.)',\r\n                'To register a sound',\r\n                '1. Record the sound you want.',\r\n                '(In order to increase the recognition accuracy, it is necessary to record as noise-free as possible.)',\r\n                '2. Tap the \"Upload File\" button to select the recorded file.',\r\n                '3. Use the input window to the right of \"Upload File\" to change the name you want to register, and then click the Add button.',\r\n                '4. Set the microphone to receive as many sounds as possible, then press the Record button in Sensitivity Settings.',\r\n                '5. Record for at least 3 seconds and press the Stop button. (The process of measuring scores in a typical environment.)',\r\n                '6. Adjust sensitivity with the current measured score.',\r\n                '7. Prepare to play the recorded file and press the record button again.',\r\n                '8. Play the recorded file to a volume as similar as it sounds, record it for at least 3 seconds, and then press the Stop button.',\r\n                '9. Sets the appropriate value between the current score and the existing sensitivity score.',\r\n                '10. After completing the sensitivity setting, start detecting and play the recorded file to set the appropriate sensitivity.'],\r\n        text: ['Please add new text!', 'Please enter the name', 'You can register up to 10 words.', 'Only English words can be recognized.'],\r\n        sound: ['Please add new sound files!', 'Upload file', 'Please enter the name', 'You can upload up to 5 files.', \r\n                'The maximum capacity of a single file is 300 KB.'],\r\n        setting: ['Alarm sound', 'Alarm push', 'Microphone test', 'Logout', 'Ring Tone', 'Alarm 1', 'Alarm 2', 'Alarm 3'],\r\n        sensitivity: ['Sensitivity', '\\'s sensitivity', 'Current score', 'Before the measurement', 'Sensitivity', \r\n                      'Click the Record button to enter the sound through the current microphone for at least 5s and exit the recording.',\r\n                      'The higher the sensitivity, the more accurate the classification of sounds, but the frequency of recognition may decrease', \r\n                      'If the printed score is repeated below 60, we recommend adjusting the recording file or current device.'],\r\n        uploadFail: ['Upload failed', 'Unable to register with the same name!', '', 'You can register up to 10 words.',\r\n                     'The file has a large capacity! Upload files below 300kb!', \r\n                    'You can upload up to 5 files.', ],\r\n        delete: ['Delete?', 'Are you sure you want to delete ', 'Delete'],\r\n        logout: ['Logout Successful', 'Logout Successful!'],\r\n        detecting: ['Detecting..', 'is detected!', 'Sound List', 'Text List'],\r\n        push: [\"is detected!!\", \"Detected!!\"],\r\n    },\r\n};\r\n\r\nexport default trans;","import { useSelector } from 'react-redux';\r\nimport trans from './lang';\r\nimport '../style/Guide.scss';\r\n\r\nfunction Guide() {\r\n\r\n\r\n  const { lang } = useSelector(state => state.preferenceReducer);\r\n\r\n\r\n    return (\r\n      <div className='Guide'>\r\n          {trans[lang]['guide'][0]}\r\n          <div className='Text'>\r\n            {trans[lang]['guide'][1]}\r\n            <div className='TextGuide'>\r\n              {trans[lang]['guide'][2]}\r\n              <br/>\r\n              {trans[lang]['guide'][3]}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className='Sound'>\r\n            {trans[lang]['guide'][4]}\r\n            <div className='SoundGuide'>\r\n            {trans[lang]['guide'][5]}\r\n            <br/>\r\n            {trans[lang]['guide'][6]}\r\n            <br/>\r\n            {trans[lang]['guide'][7]}\r\n            <br/>\r\n            {trans[lang]['guide'][8]}\r\n            <br/>\r\n            {trans[lang]['guide'][9]}\r\n            <br/>\r\n            {trans[lang]['guide'][10]}\r\n            <br/>\r\n            {trans[lang]['guide'][11]}\r\n            <br/>\r\n            {trans[lang]['guide'][12]}\r\n            <br/>\r\n            {trans[lang]['guide'][13]}\r\n            <br/>\r\n            {trans[lang]['guide'][14]}\r\n            <br/>\r\n            {trans[lang]['guide'][15]}\r\n            <br/>\r\n            {trans[lang]['guide'][16]}\r\n            </div>\r\n            \r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Guide;","import { createAction, handleActions } from 'redux-actions';\r\n\r\n/*\r\n    modal 생성 및 결과 적용을 위한 redux\r\n*/ \r\n\r\nconst SET_OPEN = 'ModalResult/SET_OPEN';\r\nconst SET_RESULT = 'ModalResult/SET_RESULT';\r\n\r\nexport const setResult = createAction(SET_RESULT, value => value);\r\nexport const setOpen = createAction(SET_OPEN, value => value);\r\n\r\nconst initialState = {\r\n    result: false,\r\n    head: '',\r\n    body: '',\r\n    buttonNum: 2,\r\n    open: false,\r\n    click: false,\r\n    headColor: null,\r\n    btn1Color: null,\r\n    btn2Color: null,\r\n    btn1Text: null,\r\n    btn2Text: null,\r\n    btnText: [],\r\n    callback: () => {},\r\n    cancelCallback: () => {},\r\n}\r\n\r\nconst setModal = handleActions(\r\n    {\r\n        [SET_OPEN]: (state, action) => ({\r\n            ...state,\r\n            head: action.payload.head,\r\n            body: action.payload.body,\r\n            buttonNum: action.payload.buttonNum || 2,\r\n            callback: action.payload.callback || (() => {}),\r\n            cancelCallback: action.payload.cancelCallback || (() => {}),\r\n            headColor: action.payload.headColor,\r\n            btn1Color: action.payload.btn1Color,\r\n            btn2Color: action.payload.btn2Color,\r\n            btn1Text: action.payload.btn1Text,\r\n            btn2Text: action.payload.btn2Text,\r\n            btnText: action.payload.btnText || [],\r\n            open: true,\r\n            click: false,\r\n        }),\r\n\r\n        [SET_RESULT]: (state, action) => ({\r\n            ...state,\r\n            result: action.payload,\r\n            open: false,\r\n            click: true,\r\n        }),\r\n    },\r\n\r\n    initialState,\r\n);\r\n\r\nexport default setModal;","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga from './sagaTemplate';\r\nimport { addSoundItem, removeSoundItem, updateSoundItem , updateSoundSensitivity} from './api';\r\n\r\n/*\r\n    설정한 소리 파일 리스트를 위한 redux 모듈\r\n*/\r\n\r\n// 각각 추가, 삭제, 이름 변경에 대한 action type\r\nconst ADD_ITEM = 'SoundList/ADD_ITEM';\r\nconst REMOVE_ITEM = 'SoundList/REMOVE_ITEM';\r\nconst UPDATE_ITEM = 'SoundList/UPDATE_ITEM';\r\nconst UPDATE_SENSITIVITY = 'SoundList/UPDATE_SENSITIVITY';\r\n\r\n// 각각의 요청이 성공했을 경우\r\nconst ADD_ITEM_SUCCESS = 'SoundList/ADD_ITEM_SUCCESS';\r\nconst REMOVE_ITEM_SUCCESS = 'SoundList/REMOVE_ITEM_SUCCESS';\r\nconst UPDATE_ITEM_SUCCESS = 'SoundList/UPDATE_ITEM_SUCCESS';\r\nconst UPDATE_SENSITIVITY_SUCCESS = 'SoundList/UPDATE_SENSITIVITY_SUCCESS';\r\n\r\n// 불러온 값 할당\r\nconst SET_LIST = 'SoundList/SET_LIST';\r\n// 작업에 실패했을 경우\r\nconst OP_FAILURE = 'SoundList/FAILURE';\r\nconst SET_ERROR = 'SoundList/SET_ERROR';\r\n\r\n// 각 action type에 대한 action 생성\r\nexport const addItem = createAction(ADD_ITEM, item => item);\r\nexport const removeItem = createAction(REMOVE_ITEM, id => id);\r\nexport const updateItem = createAction(UPDATE_ITEM, item => item);\r\nexport const setList = createAction(SET_LIST, list => list);\r\n//export const operationFailed = createAction(OP_FAILURE, e => e);\r\nexport const updateSensitivity = createAction(UPDATE_SENSITIVITY, sens => sens);\r\nexport const setError = createAction(SET_ERROR, e => e);\r\n\r\n// 비동기 미들웨어 추가\r\nconst addItemSaga = createRequestSaga('SoundList', ADD_ITEM, addSoundItem);\r\nconst removeItemSaga = createRequestSaga('SoundList', REMOVE_ITEM, removeSoundItem);\r\nconst updateItemSaga = createRequestSaga('SoundList', UPDATE_ITEM, updateSoundItem);\r\nconst updateSensitivitySaga = createRequestSaga('SoundList', UPDATE_SENSITIVITY, updateSoundSensitivity);\r\n\r\n// workers\r\nexport function* soundSaga() { \r\n    yield takeLatest(ADD_ITEM, addItemSaga);\r\n    yield takeLatest(REMOVE_ITEM, removeItemSaga);\r\n    yield takeLatest(UPDATE_ITEM, updateItemSaga);\r\n    yield takeLatest(UPDATE_SENSITIVITY, updateSensitivitySaga);\r\n}\r\n\r\n// 초기 상태\r\nconst initialState = {\r\n    soundList: [],\r\n    // 원래는 서버에서 받아온 id를 넣어줘야되는데\r\n    // 지금 클라에서 테스트하기 위한 용도의 변수값\r\n    error: false, \r\n}\r\n\r\n// action을 위한 reducer\r\n// 각 요청을 성공했을 경우 수행으로 변경해야함\r\n// ADD_ITEM => ADD_ITEM_SUCCESS로, 지금은 서버 개발전 테스트를 위해 보류\r\nconst updateSoundList = handleActions(\r\n    {\r\n        [ADD_ITEM_SUCCESS]: (state, action) => {\r\n            \r\n            // name을 추가하면 id값을 증가시키고 list에 추가\r\n            const item = {\r\n                id: action.payload._id,\r\n                name: action.payload.name,\r\n                blob: JSON.stringify(Array.from(new Uint8Array(action.payload.buffer.data))),\r\n                score: 60,\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                soundList: state.soundList.concat(item),\r\n                error: false,\r\n            }\r\n\r\n        },\r\n\r\n        [REMOVE_ITEM_SUCCESS]: (state, action) => (\r\n            // 해당 id의 원소 삭제\r\n            {\r\n                ...state,\r\n                soundList: state.soundList.filter(item => item.id !== action.payload.audioid),\r\n                error: false,\r\n            }\r\n        ),\r\n\r\n        [UPDATE_ITEM_SUCCESS]: (state, action) => (\r\n            // 해당 item의 id값에 해당하는 name을 변경\r\n            {\r\n                ...state,\r\n                soundList: state.soundList.map(item => item.id === action.payload.audioid ?\r\n                                               {...item, name: action.payload.name} : item),\r\n                error: false,\r\n            }\r\n        ),\r\n        \r\n        [UPDATE_SENSITIVITY_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            soundList: state.soundList.map(item => item.id === action.payload.audioid ?\r\n                                               {...item, score: action.payload.sensitivity} : item),\r\n            error: false,\r\n        }),\r\n\r\n        // 맨 처음 로그인 시 통째로 받아올 때\r\n        [SET_LIST]: (state, action) => ({\r\n            soundList: action.payload,\r\n            error: false,\r\n        }),\r\n\r\n        // 서버 요청이 실패했을 경우\r\n        [OP_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            ...action.payload,\r\n            error: true,\r\n        }),\r\n\r\n        [SET_ERROR]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        })\r\n    },\r\n\r\n    initialState,\r\n)\r\n\r\nexport default updateSoundList;","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from './sagaTemplate';\r\nimport { getScore } from './api';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst SET_OPEN = 'SensitivityResult/SET_OPEN';\r\nconst SET_RESULT = 'SensitivityResult/SET_RESULT';\r\nconst GET_SCORE_SERVER = 'SensitivityResult/GET_SCORE_SERVER';\r\nconst GET_SCORE_SERVER_SUCCESS = 'SensitivityResult/GET_SCORE_SERVER_SUCCESS';\r\nconst OP_FAILURE = 'SensitivityResult/FAILURE';\r\n\r\nexport const setResult = createAction(SET_RESULT, value => value);\r\nexport const setOpenSensitivity = createAction(SET_OPEN, value => value);\r\nexport const getScoreServer = createAction(GET_SCORE_SERVER, blob => blob);\r\n\r\nconst getScoreServerSaga = createRequestSaga('SensitivityResult', GET_SCORE_SERVER, getScore);\r\n\r\nexport function* sensitivitySaga() {\r\n    yield takeLatest(GET_SCORE_SERVER, getScoreServerSaga);\r\n}\r\n\r\nconst initialState = {\r\n    result: false,\r\n    id: 0,\r\n    score: 60,\r\n    name: '',\r\n    open: false,\r\n    click: false,\r\n    scoreFromServer: null,\r\n    error: false,\r\n}\r\n\r\nconst setSensitivity = handleActions(\r\n    {\r\n        [SET_OPEN]: (state, action) => ({\r\n            ...state,\r\n            id: action.payload.id,\r\n            score: action.payload.score,\r\n            open: true,\r\n            click: false,\r\n            name: action.payload.name,\r\n            scoreFromServer: null,\r\n            error: false,\r\n        }),\r\n\r\n        [SET_RESULT]: (state, action) => ({\r\n            ...state,\r\n            result: action.payload,\r\n            score: 0,\r\n            open: false,\r\n            click: true,\r\n            error: false,\r\n        }),\r\n\r\n        [GET_SCORE_SERVER_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            scoreFromServer: action.payload.accuracy,\r\n            error: false,\r\n        }),\r\n\r\n        [OP_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            ...action.payload,\r\n            error: true,\r\n        }),\r\n    },\r\n\r\n    initialState,\r\n);\r\n\r\nexport default setSensitivity;","import { useCallback, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setOpen } from '../modules/ModalResult';\r\nimport { setOpenSensitivity } from '../modules/SensitivityResult';\r\nimport { setError } from '../modules/SoundList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { MdDeleteForever, MdModeEdit, MdDone, MdPlayCircleOutline, MdVolumeUp, MdVolumeDown } from \"react-icons/md\"\r\nimport { FaRegStopCircle, FaVolumeDown } from 'react-icons/fa';\r\nimport trans from './lang';\r\nimport '../style/SoundSetting.scss';\r\n\r\nfunction SoundListItem(props) {\r\n\r\n    const { name, order, clickItem, isClick, updateName, deleteName, setDelete, setUpdate, blob, score } = props;\r\n    const dispatch = useDispatch();\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n\r\n    const LightTooltip = withStyles((theme) => ({\r\n        tooltip: {\r\n            backgroundColor: theme.palette.common.white,\r\n            color: 'rgba(0, 0, 0, 0.87)',\r\n            boxShadow: theme.shadows[2],\r\n            fontSize: 11,\r\n            margin: 5,\r\n        },\r\n    }))(Tooltip);\r\n\r\n    // 항목 수정된 이름\r\n    const [inputName, setInputName] = useState(name);\r\n\r\n    // 현재 수정/ 삭제 중 인지\r\n    const [change, setChange] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n\r\n    const handleClick = useCallback((e) => {\r\n        setAnchorEl(e.currentTarget);\r\n    }, [setAnchorEl]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setAnchorEl(null);\r\n    }, [setAnchorEl]);\r\n\r\n    useEffect(() => {\r\n        // 새롭게 리렌더링 될 때마다 항목의 수정 이름은\r\n        // 본인의 기본 이름과 같도록 세팅 \r\n        setInputName(name);\r\n        const buttons = document.getElementById('Change' + order);\r\n        buttons.style.display = isClick || change ? 'inline-block' : 'none';\r\n    }, [name, setInputName, isClick, order, change]);\r\n\r\n    const renderName = useCallback((len) => {\r\n        // 글자 수 len + 3 이상이면 자르고 ... 로 렌더링\r\n        if(String(name).length < len + 3) return name;\r\n        return String(name).substring(0, len) + \"...\";\r\n    }, [name]);\r\n\r\n    const deleteItem = useCallback(() => {\r\n        \r\n        // 삭제중임을 명시\r\n        setDelete(true);\r\n        setUpdate(false);\r\n        setChange(false);\r\n\r\n        // 팝업 객체\r\n        const popup = {\r\n            head: trans[lang]['delete'][0],\r\n            body: lang === 'ko' ? `${renderName(5)} ${trans[lang]['delete'][1]}` : `${trans[lang]['delete'][1]}${renderName(5)}?`,\r\n            callback: () => deleteName(order),\r\n            headColor: '#ff3547',\r\n            btn1Color: '#ff3547',\r\n            btn2Color: '#f2f3f4',\r\n            btn1Text: '#ffffff',\r\n            btn2Text: '#000000',\r\n            btnText: [trans[lang]['delete'][2], trans[lang]['cancel']],\r\n        };\r\n\r\n        // popup open\r\n        dispatch(setOpen(popup));\r\n        \r\n        setDelete(false);\r\n        clickItem(-1);\r\n    }, [deleteName, order, clickItem, setUpdate, setChange, setDelete, dispatch, renderName, lang]);\r\n\r\n    const clickUpdate = useCallback(() => {\r\n        // 수정 시작\r\n        setUpdate(true);\r\n        setChange(true);\r\n        setInputName(name);\r\n        handleClose();\r\n    }, [setUpdate, setChange, handleClose, setInputName, name]);\r\n\r\n    const updateItem = useCallback(() => {\r\n        // 항목 수정 후 초기화\r\n        updateName(order, inputName, score);\r\n        setUpdate(false);\r\n        setChange(false);\r\n        clickItem(-1);\r\n    }, [updateName, inputName, setUpdate, order, clickItem, score, setChange]);\r\n\r\n    const changeInput = useCallback((e) => {\r\n        // 항목 이름 수정값 받아오기\r\n        setInputName(e.target.value);\r\n    }, [setInputName]);\r\n\r\n\r\n    const onClick = useCallback(() => {\r\n        // 이 항목 클릭\r\n        clickItem(order);\r\n    }, [clickItem, order]);\r\n\r\n    const onPlay = useCallback(() => {\r\n        const audio = document.getElementById(`audio${order}`);\r\n        const url = URL.createObjectURL(new Blob([new Uint8Array(JSON.parse(blob)).buffer]));\r\n        console.log(url);\r\n        audio.src = url;\r\n        audio.play();\r\n    }, [order, blob]);\r\n\r\n    const onStop = useCallback(() => {\r\n        const audio = document.getElementById(`audio${order}`);\r\n        audio.pause();\r\n        audio.src = blob;\r\n    }, [order, blob]);\r\n\r\n    const changeVolume = useCallback((e, newValue) => {\r\n        const audio = document.getElementById(`audio${order}`);\r\n        audio.volume = newValue / 100;\r\n    }, [order]);\r\n\r\n    const volumeSlider = useCallback(() => {\r\n        const audio = document.getElementById(`audio${order}`);\r\n        return (<div>\r\n                    <MdVolumeDown size={30}/>\r\n                    <Slider onChange={changeVolume}\r\n                         defaultValue={audio === null ? 100 : audio.volume * 100}\r\n                         aria-labelledby=\"continuous-slider\" style={{width: 100, marginLeft: 3, marginRight: 3}}\r\n                         min={0}\r\n                         max={100}/>\r\n                    <MdVolumeUp size={30}/>\r\n                </div>)\r\n    }, [changeVolume, order]);\r\n\r\n    const renderPlay = useCallback(() => {\r\n        //const url = URL.createObjectURL(blob);\r\n        //console.log(url);\r\n        return (<div className='Play'>\r\n                    <audio id={`audio${order}`} style={{display: 'none'}}/>\r\n                    <MdPlayCircleOutline className='start' size={35} onClick={onPlay}/>\r\n                    <FaRegStopCircle className='stop' size={30} onClick={onStop}/>\r\n                    <div className='volume'>\r\n                    <LightTooltip title={volumeSlider()} interactive placement=\"top\" disableFocusListener disableTouchListener>\r\n                        <div style={{display: 'inline-block'}}><FaVolumeDown size={35}/></div>\r\n                    </LightTooltip>\r\n                    </div>\r\n                </div>);\r\n    }, [order, onPlay, onStop, volumeSlider]);\r\n\r\n    const clickSensitivity = useCallback(() => {\r\n        const popup = {\r\n            id: order,\r\n            name: renderName(10),\r\n            score: score,\r\n        };\r\n        // popup open\r\n        dispatch(setError(false));\r\n        dispatch(setOpenSensitivity(popup));\r\n        handleClose();\r\n    }, [dispatch, order, renderName, handleClose, score]);\r\n\r\n\r\n    return (\r\n        <div className='SoundListItem'>\r\n            <div className='ItemName' onClick={onClick}>\r\n                {change ? <input name='name' value={inputName} onChange={changeInput} className='EditInput'/> :\r\n                 <div className='NameText'>{renderName(10)}</div>}\r\n                <div className='ItemScore'>\r\n                    {trans[lang]['sensitivity'][0]}: {score}\r\n                </div>\r\n                {renderPlay()}\r\n            </div>\r\n            <div id={'Change' + order} className='ChangeButton' style={{display: 'none'}}>\r\n                {change ? <MdDone className='Button' onClick={updateItem}/> :\r\n                <MdModeEdit className='Button' onClick={handleClick}/>}\r\n                <Menu\r\n                        id=\"long-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                            style: {\r\n                                maxHeight: 48 * 4.5,\r\n                                width: '27ch',\r\n                            },\r\n                        }}\r\n                    >\r\n                        <MenuItem key='name' onClick={clickUpdate}>{trans[lang]['name']}</MenuItem>\r\n                        <MenuItem key='sensitivity' onClick={clickSensitivity}>{trans[lang]['sens']}</MenuItem>\r\n                </Menu>\r\n                <MdDeleteForever className='Button' onClick={deleteItem}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundListItem;","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setOpen } from '../modules/ModalResult';\r\nimport { addItem, removeItem, updateItem } from '../modules/SoundList';\r\nimport { setOpenSensitivity } from '../modules/SensitivityResult';\r\nimport SoundListItem from './SoundListItem';\r\nimport { FiUpload, FiCheckSquare } from \"react-icons/fi\";\r\nimport { MdAddBox } from \"react-icons/md\";\r\nimport trans from './lang';\r\nimport '../style/SoundSetting.scss';\r\n\r\nfunction SoundSetting() {\r\n\r\n    const FILE_LIMIT = useMemo(() => 300 * 1024, []); // 300kb\r\n    const USER_ID = useSelector(state => state.updateLoginState.user._id);\r\n    const MAX_AUDIO = useMemo(() => 5, []);\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n    const DEFAULT_FILENAME = useMemo(() => trans[lang]['sound'][1], [lang]);\r\n\r\n    // redux로 부터 소리파일이름 리스트를 가져옴\r\n    const soundList = useSelector(state => state.updateSoundList.soundList);\r\n    const dispatch = useDispatch();\r\n\r\n    const [item, setItem] = useState(-1); // 현재 클릭한 항목\r\n    const [update, setUpdate] = useState(false); // 현재 수정 중 인가\r\n    const [isDelete, setDelete] = useState(false); // 현재 삭제 중 인가\r\n    const [fileName, setFileName] = useState(DEFAULT_FILENAME); // 현재 업로드한 file name\r\n    const [alias, setAlias] = useState(''); // 현재 작성 중인 파일 alias\r\n    const [blob, setBlob] = useState(null); // 현재 업로드하려는 파일\r\n\r\n    const clickAway = useCallback((e) => {\r\n        const parent = e.target.parentNode;\r\n        if(!(parent.className === 'SoundListItem' || parent.className === 'ChangeButton' || \r\n            (parent.parentNode !== null && parent.parentNode.className === 'ChangeButton'))){\r\n            setItem(-1);\r\n        }\r\n    }, [setItem])\r\n\r\n    // 리스트 아이템 영역 밖을 클릭 시 선택 해제 하도록\r\n    useEffect(() => {\r\n        if(update || isDelete) document.removeEventListener('mouseup', clickAway);\r\n        else{\r\n            document.addEventListener('mouseup', clickAway);\r\n        }\r\n\r\n        if(blob === null) {\r\n            setFileName(DEFAULT_FILENAME);\r\n        }\r\n    }, [clickAway, update, isDelete, blob, setFileName, DEFAULT_FILENAME]);\r\n\r\n    const clickItem = useCallback((i) => {\r\n        \r\n        // update 혹은 delete 중이면 클릭 무시\r\n        if(update || isDelete)\r\n            return;\r\n        \r\n        // 현재 클릭 중인 아이템 클릭 시 취소\r\n        // 그 이외는 그 항목을 선택\r\n        if(i === item){\r\n            setItem(-1);\r\n        }\r\n        else{\r\n            setItem(i);\r\n        }\r\n        \r\n    }, [setItem, item, update, isDelete]);\r\n\r\n    const updateName = useCallback((i, alias, score) => {\r\n        // 항목 업데이트 후 클릭 항목 초기화\r\n        for(const sound of soundList){\r\n            if(sound.id !== i && sound.name === alias) {\r\n                const popup = {\r\n                    head: trans[lang]['uploadFail'][0],\r\n                    body: trans[lang]['uploadFail'][1],\r\n                    buttonNum: 1,\r\n                    callback: () => {},\r\n                    headColor: '#ff3547',\r\n                    btn1Color: '#f2f3f4',\r\n                    btn2Color: null,\r\n                    btn1Text: '#000000',\r\n                    btn2Text: null,\r\n                };\r\n\r\n                // popup open\r\n                dispatch(setOpen(popup));\r\n                return;\r\n            }\r\n        }\r\n        const newItem = {_id: USER_ID, audioid: i, sensitivity: score, name: alias};\r\n        dispatch(updateItem(newItem));\r\n        setItem(-1);\r\n    }, [dispatch, setItem, USER_ID, lang, soundList]);\r\n\r\n    const deleteName = useCallback((i) => {\r\n        // 항목 삭제 후 클릭 항목 초기화\r\n        const item = {data:{_id: USER_ID, audioid: i}};\r\n        dispatch(removeItem(item));\r\n        setItem(-1);\r\n    }, [setItem, dispatch, USER_ID]);\r\n\r\n    const renderList = useCallback(() => {\r\n        \r\n        // list가 비어 있으면 추가해 달라는 문구 출력\r\n        if(soundList.length === 0){\r\n            return null;\r\n        }\r\n        //console.log(soundList[0].blob);\r\n        //console.log(JSON.parse(soundList[0].blob));\r\n        // soundList를 이용해 각 listItem 컴포넌트를 렌더링\r\n        return soundList.map(ele => <SoundListItem name={ele.name}\r\n                                                    key={ele.id}\r\n                                                    clickItem={clickItem}\r\n                                                    order={ele.id}\r\n                                                    isClick={ele.id === item}\r\n                                                    blob={(ele.blob)}\r\n                                                    score={ele.score}\r\n                                                    updateName={updateName}\r\n                                                    deleteName={deleteName}\r\n                                                    setUpdate={setUpdate}\r\n                                                    setDelete={setDelete}/>)\r\n    }, [soundList, item, clickItem, updateName, deleteName, setUpdate, setDelete]);\r\n\r\n    const renderName = useCallback((name, len) => {\r\n        // 글자 수 len + 3 이상이면 자르고 ... 로 렌더링\r\n        if(String(name).length < len + 3) return name;\r\n        return String(name).substring(0, len) + \"...\";\r\n    }, []);\r\n\r\n    \r\n\r\n    const uploadAudio = useCallback((e) => {\r\n        // 로컬에서 오디오 파일 업로드\r\n        const selectFile = e.target.files[0];\r\n        if(selectFile === null) return;\r\n\r\n        if(\"size\" in selectFile && selectFile.size > FILE_LIMIT) {\r\n            const popup = {\r\n                head: trans[lang]['uploadFail'][0],\r\n                body: trans[lang]['uploadFail'][4],\r\n                buttonNum: 1,\r\n                callback: () => {},\r\n                headColor: '#ff3547',\r\n                btn1Color: '#f2f3f4',\r\n                btn2Color: null,\r\n                btn1Text: '#000000',\r\n                btn2Text: null,\r\n            };\r\n\r\n            // popup open\r\n            dispatch(setOpen(popup));\r\n            e.target.value = \"\";\r\n            return;\r\n        }\r\n\r\n        if(soundList.length === MAX_AUDIO) {\r\n            const popup = {\r\n                head: trans[lang]['uploadFail'][0],\r\n                body: `${trans[lang]['uploadFail'][5]}`,\r\n                buttonNum: 1,\r\n                callback: () => {},\r\n                headColor: '#ff3547',\r\n                btn1Color: '#f2f3f4',\r\n                btn2Color: null,\r\n                btn1Text: '#000000',\r\n                btn2Text: null,\r\n            };\r\n\r\n            // popup open\r\n            dispatch(setOpen(popup));\r\n            e.target.value = \"\";\r\n            return;\r\n        }\r\n\r\n        setBlob(selectFile);\r\n        setFileName(renderName(String(selectFile.name), 10));\r\n        setAlias(String(selectFile.name));\r\n        e.target.value = \"\";\r\n        \r\n    }, [setFileName, setAlias, setBlob, FILE_LIMIT, dispatch, soundList, MAX_AUDIO, lang, renderName]);\r\n\r\n    const writeName = useCallback((e) => {\r\n        // 파일 이름 변경\r\n        setAlias(e.target.value);\r\n    }, [setAlias]);\r\n\r\n    const addToList = useCallback(() => {\r\n        // 현재 파일이 업로드 되지 않았거나 이름이 비어있으면 무시\r\n        if(fileName === DEFAULT_FILENAME || alias === '')\r\n            return;\r\n        // 이미 있는 이름이면 무시\r\n        for(const sound of soundList){\r\n            if(sound.name === alias) {\r\n                const popup = {\r\n                    head: trans[lang]['uploadFail'][0],\r\n                    body: trans[lang]['uploadFail'][1],\r\n                    buttonNum: 1,\r\n                    callback: () => {},\r\n                    headColor: '#ff3547',\r\n                    btn1Color: '#f2f3f4',\r\n                    btn2Color: null,\r\n                    btn1Text: '#000000',\r\n                    btn2Text: null,\r\n                };\r\n\r\n                // popup open\r\n                dispatch(setOpen(popup));\r\n                return;\r\n            }\r\n        }\r\n        // 항목 추가\r\n        const item = new FormData();\r\n        item.append(\"name\", alias);\r\n        item.append(\"_id\", USER_ID);\r\n        item.append(\"data\", blob);\r\n\r\n        dispatch(addItem(item));\r\n        setAlias('');\r\n        setFileName(DEFAULT_FILENAME);\r\n        setBlob(null);\r\n        dispatch(setOpenSensitivity({id: null, name: alias, score: 60}));\r\n    }, [dispatch, setAlias, setFileName, setBlob, fileName, alias, soundList, blob, DEFAULT_FILENAME, USER_ID, lang]);\r\n\r\n    return (\r\n        <div className='SoundComponent'>\r\n            <div className='SoundList'>\r\n                {renderList()}\r\n                {soundList.length < MAX_AUDIO ? (<div className='FileUpload' style={{marginTop: soundList.length * 60 + 25}}>\r\n                    <label className='UploadButton' htmlFor='audio'>{fileName} <FiUpload className='Icon'/></label>\r\n                    <input type='file' id='audio' accept=\"audio/*\" style={{display: 'none'}} onChange={uploadAudio}/>\r\n                    <input type='text' name='alias' className='NameInput' \r\n                        placeholder={trans[lang]['sound'][2]} value={alias} onChange={writeName}/>\r\n                    <MdAddBox name='submit' className='AddButton' size={40} color={'grey'} onClick={addToList}/>\r\n                </div>) : null}\r\n                {soundList.length === 0 ? (<div className='Empty'>{trans[lang]['sound'][0]}</div>) : null}\r\n            </div>\r\n          \r\n            <div className='Notify'>\r\n                <div className='NotifyItem'>\r\n                    <div className='GuideIcon'>\r\n                        <FiCheckSquare size={20}/>\r\n                    </div>\r\n                    <div className='Guide1'>\r\n                        {trans[lang]['sound'][3]}\r\n                    </div>\r\n                </div>\r\n                <div className='NotifyItem'>\r\n                    <div className='GuideIcon'>\r\n                        <FiCheckSquare size={20}/>\r\n                    </div>\r\n                    <div className='Guide2'>\r\n                        {trans[lang]['sound'][4]}\r\n                    </div>\r\n                </div>\r\n            </div>          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SoundSetting;","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga from './sagaTemplate';\r\nimport { addTextItem, removeTextItem, updateTextItem } from './api';\r\n/*\r\n    설정한 text 파일 리스트를 위한 redux 모듈\r\n*/\r\n\r\n// 각각 추가, 삭제, 이름 변경에 대한 action type\r\nconst ADD_ITEM = 'TextList/ADD_ITEM';\r\nconst REMOVE_ITEM = 'TextList/REMOVE_ITEM';\r\nconst UPDATE_ITEM = 'TextList/UPDATE_ITEM';\r\n\r\n// 각각의 요청이 성공했을 경우\r\nconst ADD_ITEM_SUCCESS = 'TextList/ADD_ITEM_SUCCESS';\r\nconst REMOVE_ITEM_SUCCESS = 'TextList/REMOVE_ITEM_SUCCESS';\r\nconst UPDATE_ITEM_SUCCESS = 'TextList/UPDATE_ITEM_SUCCESS';\r\n\r\n// 불러온 값 할당\r\nconst SET_LIST = 'TextList/SET_LIST';\r\n// 작업에 실패했을 경우\r\nconst OP_FAILURE = 'TextList/FAILURE';\r\n\r\n// 각 action type에 대한 action 생성\r\nexport const addItem = createAction(ADD_ITEM, item => item);\r\nexport const removeItem = createAction(REMOVE_ITEM, id => id);\r\nexport const updateItem = createAction(UPDATE_ITEM, item => item);\r\nexport const setTextList = createAction(SET_LIST, list => list);\r\n//export const operationFailed = createAction(OP_FAILURE, e => e);\r\n\r\n// 비동기 미들웨어 추가\r\nconst addItemSaga = createRequestSaga('TextList', ADD_ITEM, addTextItem);\r\nconst removeItemSaga = createRequestSaga('TextList', REMOVE_ITEM, removeTextItem);\r\nconst updateItemSaga = createRequestSaga('TextList', UPDATE_ITEM, updateTextItem);\r\n\r\n// workers\r\nexport function* textSaga() { \r\n    yield takeLatest(ADD_ITEM, addItemSaga);\r\n    yield takeLatest(REMOVE_ITEM, removeItemSaga);\r\n    yield takeLatest(UPDATE_ITEM, updateItemSaga);\r\n}\r\n\r\n// 초기 상태\r\nconst initialState = {\r\n    textList: [],\r\n    error: false,\r\n}\r\n\r\n// action을 위한 reducer\r\nconst updateTextList = handleActions(\r\n    {\r\n        [ADD_ITEM_SUCCESS]: (state, action) => {\r\n            // name을 추가하면 id값을 증가시키고 list에 추가\r\n            const item = {\r\n                id: action.payload._id,\r\n                text: action.payload.text,\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                textList: state.textList.concat(item),\r\n                error: false,\r\n            }\r\n\r\n        },\r\n\r\n        [REMOVE_ITEM_SUCCESS]: (state, action) => (\r\n            // 해당 id의 원소 삭제\r\n            {\r\n                ...state,\r\n                textList: state.textList.filter(item => item.id !== action.payload.textid),\r\n                error: false,\r\n            }\r\n        ),\r\n\r\n        [UPDATE_ITEM_SUCCESS]: (state, action) => (\r\n            // 해당 item의 id값에 해당하는 name을 변경\r\n            {\r\n                ...state,\r\n                textList: state.textList.map(item => item.id === action.payload.textid ?\r\n                                               {...item, text: action.payload.text} : item),\r\n                error: false,\r\n            }\r\n        ),\r\n\r\n        // 맨 처음 로그인 시 통째로 받아올 때\r\n        [SET_LIST]: (state, action) => ({\r\n            textList: action.payload,\r\n            error: false,\r\n        }),\r\n\r\n        // 서버 요청이 실패했을 경우\r\n        [OP_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            ...action.payload,\r\n            error: true,\r\n        })\r\n\r\n    },\r\n\r\n    initialState,\r\n)\r\n\r\nexport default updateTextList;","import { useCallback, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setOpen } from '../modules/ModalResult';\r\nimport { MdDeleteForever, MdModeEdit, MdDone } from \"react-icons/md\"\r\nimport trans from './lang';\r\nimport '../style/TextSetting.scss';\r\n\r\nfunction TextListItem(props) {\r\n\r\n    const { name, order, clickItem, isClick, updateName, deleteName, setDelete, setUpdate } = props;\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    // 항목 수정된 이름\r\n    const [inputName, setInputName] = useState(name);\r\n\r\n    // 현재 수정/ 삭제 중 인지\r\n    const [change, setChange] = useState(false);\r\n   \r\n    useEffect(() => {\r\n        // 새롭게 리렌더링 될 때마다 항목의 수정 이름은\r\n        // 본인의 기본 이름과 같도록 세팅 \r\n        setInputName(name);\r\n    }, [name, setInputName]);\r\n\r\n    const renderName = useCallback((len) => {\r\n        // 글자 수 len + 3 이상이면 자르고 ... 로 렌더링\r\n        if(name.length < len + 3) return name;\r\n        return name.substring(0, len) + \"...\";\r\n    }, [name]);\r\n\r\n    const deleteItem = useCallback(() => {\r\n        \r\n        // 삭제중임을 명시\r\n        setDelete(true);\r\n        setUpdate(false);\r\n        setChange(false);\r\n\r\n        // 팝업 객체\r\n        const popup = {\r\n            head: trans[lang]['delete'][0],\r\n            body: lang === 'ko' ? `${renderName(5)} ${trans[lang]['delete'][1]}` : `${trans[lang]['delete'][1]}${renderName(5)}?`,\r\n            callback: () => deleteName(order),\r\n            headColor: '#ff3547',\r\n            btn1Color: '#ff3547',\r\n            btn2Color: '#f2f3f4',\r\n            btn1Text: '#ffffff',\r\n            btn2Text: '#000000',\r\n            btnText: [trans[lang]['delete'][2], trans[lang]['cancel']],\r\n        };\r\n\r\n        // popup open\r\n        dispatch(setOpen(popup));\r\n        \r\n        setDelete(false);\r\n        clickItem(-1);\r\n    }, [deleteName, order, clickItem, setUpdate, setChange, setDelete, dispatch, renderName, lang]);\r\n\r\n    const clickUpdate = useCallback(() => {\r\n        // 수정 시작\r\n        setUpdate(true);\r\n        setChange(true);\r\n    }, [setUpdate, setChange]);\r\n\r\n    const updateItem = useCallback(() => {\r\n        // 항목 수정 후 초기화\r\n        updateName(order, inputName);\r\n        setInputName(name);\r\n        setUpdate(false);\r\n        setChange(false);\r\n        clickItem(-1);\r\n    }, [updateName, inputName, setUpdate, order, clickItem, setChange, setInputName, name]);\r\n\r\n    const changeInput = useCallback((e) => {\r\n        // 항목 이름 수정값 받아오기\r\n        setInputName(e.target.value);\r\n    }, [setInputName]);\r\n\r\n\r\n    const onClick = useCallback(() => {\r\n        // 이 항목 클릭\r\n        clickItem(order);\r\n    }, [clickItem, order]);\r\n\r\n    const renderButton = useCallback(() => {\r\n        // 수정/삭제 버튼 렌더링\r\n        // 수정버튼 클릭 시 아이콘 변경되는 것 적용\r\n        return (<div className='ChangeButton'>\r\n                    {change ? <MdDone className='Button' onClick={updateItem}/> :\r\n                    <MdModeEdit className='Button' onClick={clickUpdate}/>}\r\n                    <MdDeleteForever className='Button' onClick={deleteItem}/>\r\n                </div>)\r\n    }, [deleteItem, clickUpdate, updateItem, change]);\r\n\r\n    return (\r\n        <div className='TextListItem'>\r\n            <div className=\"ItemName\" onClick={onClick} >\r\n                {change ? <input name='name' value={inputName} onChange={changeInput} className='EditInput'/> : renderName(10)}\r\n            </div>\r\n            {isClick ? renderButton() : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextListItem;","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addItem, removeItem, updateItem } from '../modules/TextList';\r\nimport TextListItem from './TextListItem';\r\nimport { setOpen } from '../modules/ModalResult';\r\nimport { FiCheckSquare } from \"react-icons/fi\";\r\nimport { MdAddBox } from \"react-icons/md\";\r\nimport trans from './lang';\r\nimport '../style/TextSetting.scss';\r\n\r\nfunction TextSetting() {\r\n\r\n    // redux로 부터 text이름 리스트를 가져옴\r\n    const textList = useSelector(state => state.updateTextList.textList);\r\n    const USER_ID = useSelector(state => state.updateLoginState.user._id);\r\n    const MAX_TEXT = useMemo(() => 10, []);\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const [item, setItem] = useState(-1); // 현재 클릭한 항목\r\n    const [update, setUpdate] = useState(false); // 현재 수정 중 인가\r\n    const [isDelete, setDelete] = useState(false); // 현재 삭제 중 인가\r\n    const [alias, setAlias] = useState(''); // 현재 작성 중인 파일 alias\r\n\r\n    const clickAway = useCallback((e) => {\r\n        const parent = e.target.parentNode;\r\n        if(!(parent.className === 'TextListItem' || parent.className === 'ChangeButton' || \r\n            (parent.parentNode !== null && parent.parentNode.className === 'ChangeButton'))){\r\n            setItem(-1);\r\n        }\r\n    }, [setItem])\r\n\r\n    // 리스트 아이템 영역 밖을 클릭 시 선택 해제 하도록\r\n    useEffect(() => {\r\n        if(update || isDelete) document.removeEventListener('mouseup', clickAway);\r\n        else{\r\n            document.addEventListener('mouseup', clickAway);\r\n        }\r\n    }, [clickAway, update, isDelete]);\r\n\r\n    const clickItem = useCallback((i) => {\r\n        \r\n        // update 혹은 delete 중이면 클릭 무시\r\n        if(update || isDelete)\r\n            return;\r\n        \r\n        // 현재 클릭 중인 아이템 클릭 시 취소\r\n        // 그 이외는 그 항목을 선택\r\n        if(i === item){\r\n            setItem(-1);\r\n        }\r\n        else{\r\n            setItem(i);\r\n        }\r\n        \r\n    }, [setItem, item, update, isDelete]);\r\n\r\n    const updateName = useCallback((i, alias) => {\r\n        // 항목 업데이트 후 클릭 항목 초기화\r\n        for(const text of textList){\r\n            if(text.id !== i && text.text === alias) {\r\n                const popup = {\r\n                    head: trans[lang]['uploadFail'][0],\r\n                    body: trans[lang]['uploadFail'][1],\r\n                    buttonNum: 1,\r\n                    callback: () => {},\r\n                    headColor: '#ff3547',\r\n                    btn1Color: '#f2f3f4',\r\n                    btn2Color: null,\r\n                    btn1Text: '#000000',\r\n                    btn2Text: null,\r\n                };\r\n\r\n                // popup open\r\n                dispatch(setOpen(popup));\r\n                return;\r\n            }\r\n        }\r\n        const newItem = {_id: USER_ID, text: alias, textid: i};\r\n        dispatch(updateItem(newItem));\r\n        setItem(-1);\r\n    }, [dispatch, setItem, USER_ID, textList, lang]);\r\n\r\n    const deleteName = useCallback((i) => {\r\n        // 항목 삭제 후 클릭 항목 초기화\r\n        const item = {data:{_id: USER_ID, textid: i}};\r\n        dispatch(removeItem(item));\r\n        setItem(-1);\r\n    }, [setItem, dispatch, USER_ID]);\r\n\r\n    const renderList = useCallback(() => {\r\n        \r\n        // list가 비어 있으면 추가해 달라는 문구 출력\r\n        if(textList.length === 0){\r\n            return null;\r\n        }\r\n\r\n        // textList를 이용해 각 listItem 컴포넌트를 렌더링\r\n        return textList.map(ele => <TextListItem name={ele.text}\r\n                                                    key={ele.id}\r\n                                                    clickItem={clickItem}\r\n                                                    order={ele.id}\r\n                                                    isClick={ele.id === item}                                                    \r\n                                                    updateName={updateName}\r\n                                                    deleteName={deleteName}\r\n                                                    setUpdate={setUpdate}\r\n                                                    setDelete={setDelete}/>)\r\n    }, [textList, item, clickItem, updateName, deleteName, setUpdate, setDelete]);\r\n\r\n    const writeName = useCallback((e) => {\r\n        // 파일 이름 변경\r\n        setAlias(e.target.value);\r\n    }, [setAlias]);\r\n\r\n    const addToList = useCallback(() => {\r\n        // 이름이 비어있으면 무시\r\n        if(alias === '')\r\n            return;\r\n        // 이미 있는 이름이면 무시\r\n        for(const text of textList){\r\n            if(text.text === alias) {\r\n                const popup = {\r\n                    head: trans[lang]['uploadFail'][0],\r\n                    body: trans[lang]['uploadFail'][1],\r\n                    buttonNum: 1,\r\n                    callback: () => {},\r\n                    headColor: '#ff3547',\r\n                    btn1Color: '#f2f3f4',\r\n                    btn2Color: null,\r\n                    btn1Text: '#000000',\r\n                    btn2Text: null,\r\n                };\r\n\r\n                // popup open\r\n                dispatch(setOpen(popup));\r\n                return;\r\n            }\r\n        }\r\n        if(textList.length === MAX_TEXT) {\r\n            const popup = {\r\n                head: trans[lang]['uploadFail'][0],\r\n                body: `${trans[lang]['uploadFail'][3]}`,\r\n                buttonNum: 1,\r\n                headColor: '#ff3547',\r\n                btn1Color: '#f2f3f4',\r\n                btn2Color: null,\r\n                btn1Text: '#000000',\r\n                btn2Text: null,        \r\n                callback: () => {},\r\n            };\r\n\r\n            // popup open\r\n            dispatch(setOpen(popup));\r\n            return;\r\n        }\r\n\r\n        // 항목 추가f\r\n        const item = new FormData();\r\n        item.append(\"_id\", USER_ID);\r\n        item.append(\"text\", alias);\r\n        dispatch(addItem(item));\r\n        setAlias('');\r\n    }, [dispatch, setAlias, alias, textList, USER_ID, MAX_TEXT, lang]);\r\n\r\n    const renderTextAdd = useCallback(() => {\r\n        if(textList.length === MAX_TEXT) {\r\n            return;\r\n        }\r\n\r\n        return (<div className='FileUpload'>\r\n        <input type='text' name='alias' className='NameInput' \r\n                placeholder={trans[lang]['text'][1]} value={alias} onChange={writeName}/>\r\n        <MdAddBox name='submit' className='AddButton' size={40} color={'grey'} onClick={addToList}/>\r\n        </div>);\r\n    }, [textList, alias, writeName, addToList, MAX_TEXT, lang]);\r\n\r\n    return (\r\n        <div className='TextComponent'>\r\n            <div className='TextList'>\r\n                {renderList()}\r\n                {renderTextAdd()}\r\n                {textList.length === 0 ? (<div className='Empty'>{trans[lang]['text'][0]}</div>) : null}\r\n            </div>\r\n\r\n            <div className='Notify'>\r\n                <div className='NotifyItem'>\r\n                    <div className='GuideIcon'>\r\n                        <FiCheckSquare size={20}/>\r\n                    </div>\r\n                    <div className='Guide1'>\r\n                        {trans[lang]['text'][2]}\r\n                    </div>\r\n                </div>\r\n                <div className='NotifyItem'>\r\n                    <div className='GuideIcon'>\r\n                        <FiCheckSquare size={20}/>\r\n                    </div>\r\n                    <div className='Guide2'>\r\n                    {trans[lang]['text'][3]}\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextSetting;","import React from 'react';\r\nimport { useCallback } from 'react';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { updateLogout } from '../modules/LoginState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setOpen } from '../modules/ModalResult';\r\nimport trans from './lang';\r\n\r\nconst clientId = `${process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID}`\r\n\r\n\r\nfunction Logout() {\r\n    //Modal 용도\r\n    const dispatch = useDispatch();\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n\r\n    //로그아웃 성공시 실행\r\n    const onSuccess = useCallback(() => {\r\n        const popup = {\r\n            head: trans[lang]['logout'][0],\r\n            body: trans[lang]['logout'][1],\r\n            buttonNum: 1,\r\n            headColor: '#22d77e',\r\n            btn1Color: '#22d77e',\r\n            btn2Color: null,\r\n            btn1Text: '#ffffff',\r\n            btn2Text: null,\r\n            callback: () => dispatch(updateLogout()),\r\n        };\r\n        dispatch(setOpen(popup));\r\n\r\n    }, [dispatch, lang]);\r\n\r\n    return (\r\n        <GoogleLogout\r\n            clientId={clientId}\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={onSuccess} //성공시 실행\r\n        ></GoogleLogout>\r\n    );\r\n}\r\n\r\nexport default Logout;","import { useState, useCallback, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { postPreference } from '../modules/PreferenceResult';\r\nimport { MdMoreVert, MdVolumeDown, MdVolumeUp, MdPlayCircleOutline } from \"react-icons/md\"\r\nimport Logout from './Logout';\r\nimport Switch from \"react-switch\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport trans from './lang';\r\nimport '../style/Preference.scss';\r\n\r\nfunction Preference() {\r\n\r\n    const currentPreference = useSelector(state => state.preferenceReducer);\r\n    const USER_ID = useSelector(state => state.updateLoginState.user._id);\r\n    const [preference, setCurPreference] = useState({...currentPreference});\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const bellTypes = useMemo(() => ({\"0\": \"/alarm.mp3\", \"1\": \"/alarm2.mp3\", \"2\": \"/alarm3.mp3\",}), []);\r\n    const [recorder, setRecorder] = useState(null);\r\n    const [isRecord, setIsRecord] = useState(false);\r\n\r\n    const handleChange = useCallback((event, newValue) => {\r\n        const sound = document.getElementById('alarmTest');\r\n        sound.volume = (newValue / 100);\r\n    }, []);\r\n\r\n    const clickPlay = useCallback(() => {\r\n        const sound = document.getElementById('alarmTest');\r\n        // bell소리 선택에 따라 소스 설정\r\n        sound.volume = preference.volume / 100;\r\n        sound.src = bellTypes[preference.bell];\r\n        sound.play();\r\n\r\n    }, [preference, bellTypes]);\r\n\r\n    const handleClick = useCallback((event) => {\r\n        if(!preference.sound) return;\r\n        setAnchorEl(event.currentTarget);\r\n    }, [setAnchorEl, preference]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setAnchorEl(null);\r\n        const sound = document.getElementById('alarmTest');\r\n        setCurPreference(prefer => ({...prefer, volume: sound.volume * 100}));\r\n    }, [setAnchorEl, setCurPreference]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // 소리, 푸쉬 알림 설정\r\n    const setProperty = useCallback((checked, name) => {\r\n        if(name === 'push' && checked){\r\n            Notification.requestPermission().then(permission => {\r\n                if(permission === 'granted'){\r\n                    setCurPreference(prefer => ({...prefer, [name]: checked}));\r\n                }\r\n            });\r\n        }\r\n        else\r\n          setCurPreference(prefer => ({...prefer, [name]: checked}));\r\n    }, [setCurPreference]);\r\n\r\n    // 언어 설정\r\n    /*\r\n    const setLang = useCallback((e) => {\r\n        setCurPreference(prefer => ({...prefer, lang: e.target.value}));\r\n    }, [setCurPreference]);\r\n    */\r\n\r\n    // 벨 타입 설정\r\n    const setBell = useCallback((e) => {\r\n        setCurPreference(prefer => ({...prefer, bell: e.target.value}));\r\n    }, [setCurPreference]);\r\n\r\n    // 최종 설정 값 적용\r\n    const applyPreference = useCallback(() => {\r\n        const item = {\r\n            _id: USER_ID,\r\n            alarm: preference.sound,\r\n            alarmpush: preference.push,\r\n            //language: preference.lang,\r\n            alarmvolume: preference.volume,\r\n            alarmsound: preference.bell,\r\n        };\r\n        \r\n        dispatch(postPreference(item));\r\n        const sound = document.getElementById('alarm');\r\n        sound.src = bellTypes[preference.bell];\r\n        sound.volume = preference.volume / 100;\r\n\r\n    }, [dispatch, preference, bellTypes, USER_ID]);\r\n\r\n    const initPreference = useCallback(() => {\r\n        const item = {\r\n            sound: true,\r\n            push: false, \r\n            volume: 50,\r\n            bell: '0',\r\n        };\r\n\r\n        setCurPreference(item);\r\n    }, [setCurPreference]);\r\n\r\n    const audioStart = useCallback(() => {\r\n        const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n        navigator.getUserMedia(\r\n        {\r\n            audio: true,\r\n            video: false,\r\n        },\r\n  \r\n        function(stream){\r\n            setRecorder({context: audioCtx, stream: stream.getTracks()});\r\n            setIsRecord(true);\r\n            const source = audioCtx.createMediaStreamSource(stream);\r\n            const dest = audioCtx.destination;\r\n            const biquadFilter = audioCtx.createBiquadFilter();\r\n            const gain = audioCtx.createGain();\r\n\r\n            biquadFilter.type = \"bandpass\"\r\n            biquadFilter.frequency.setValueAtTime(1200, audioCtx.currentTime);\r\n            biquadFilter.Q.setValueAtTime(5, audioCtx.currentTime);\r\n            gain.gain.setValueAtTime(1, audioCtx.currentTime);\r\n            source.connect(biquadFilter);\r\n            biquadFilter.connect(gain);\r\n            gain.connect(dest);\r\n\r\n        },\r\n  \r\n        function(err) {\r\n            console.log('The following gUM error occured: ' + err);\r\n        }\r\n        );\r\n    }, [setRecorder, setIsRecord]);\r\n\r\n    const audioStop = useCallback(() => {\r\n        if(recorder === null) return;\r\n        recorder.context.close();\r\n        recorder.stream[0].stop();\r\n        setRecorder(null);\r\n        setIsRecord(false);\r\n    }, [recorder, setRecorder, setIsRecord]);\r\n\r\n    const startMicTest = useCallback(() => {\r\n        if(!isRecord) audioStart();\r\n        else audioStop(); \r\n    }, [isRecord, audioStart, audioStop]);\r\n\r\n    return (\r\n      <>\r\n        <div className='PreferenceBody'>\r\n            <div className='PreferenceItem'>\r\n                <div className='ItemText'>\r\n                    {trans[currentPreference.lang]['setting'][0]}\r\n                </div>\r\n                <audio id='alarmTest' style={{display: 'none'}}/>\r\n                <div className='ItemDetail'>\r\n                    <MdMoreVert size={15} onClick={handleClick} className='DetailButton'/>\r\n                    <Menu\r\n                        id=\"long-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        PaperProps={{\r\n                            style: {\r\n                                maxHeight: 48 * 4.5,\r\n                                width: '27.5ch',\r\n                            },\r\n                        }}\r\n                    >\r\n                        <MenuItem key='volume' disableRipple style={{backgroundColor: 'transparent'}}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item>\r\n                                    <MdVolumeDown size={30}/>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Slider onChange={handleChange} aria-labelledby=\"continuous-slider\"\r\n                                     defaultValue={currentPreference.volume}\r\n                                     style={{marginTop: 2}}\r\n                                     min={0}\r\n                                     max={100}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <MdVolumeUp size={30}/>\r\n                                </Grid>\r\n                                {/*\r\n                                <Grid item>\r\n                                    <MdPlayCircleOutline onClick={clickPlay} size={30}/>\r\n                                </Grid>\r\n                                */}\r\n                            </Grid>\r\n                        </MenuItem>\r\n\r\n                        <MenuItem key='bellType' disableRipple style={{backgroundColor: 'transparent'}}>\r\n                            {trans[currentPreference.lang]['setting'][4]}\r\n                            <Select\r\n                                style={{minWidth: 100, marginLeft: 15}}\r\n                                value={preference.bell}\r\n                                onChange={setBell}\r\n                                inputProps={{\r\n                                    name: 'bell',\r\n                                    id: 'bell-type',\r\n                                }}\r\n                            >\r\n                                <MenuItem value={'0'}>{trans[currentPreference.lang]['setting'][5]}</MenuItem>\r\n                                <MenuItem value={'1'}>{trans[currentPreference.lang]['setting'][6]}</MenuItem>\r\n                                <MenuItem value={'2'}>{trans[currentPreference.lang]['setting'][7]}</MenuItem>\r\n                            </Select>\r\n                            <MdPlayCircleOutline onClick={clickPlay} style={{marginLeft: 48}} size={30}/>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </div> \r\n                <div className='ItemSwitchD'>\r\n                    <Switch onChange={(e) => setProperty(e, 'sound')} checked={preference.sound}\r\n                            onColor=\"#86d3ff\"\r\n                            onHandleColor=\"#2693e6\"\r\n                            handleDiameter={30}\r\n                            uncheckedIcon={false}\r\n                            checkedIcon={false}\r\n                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                            height={20}\r\n                            width={48}/>\r\n                </div>  \r\n            </div>\r\n\r\n            <div className='PreferenceItem'>\r\n                <div className='ItemText'>\r\n                   {trans[currentPreference.lang]['setting'][1]}\r\n                </div>\r\n              \r\n                <div className='ItemSwitch'>\r\n                    <Switch onChange={(e) => setProperty(e, 'push')} checked={preference.push}\r\n                            onColor=\"#86d3ff\"\r\n                            onHandleColor=\"#2693e6\"\r\n                            handleDiameter={30}\r\n                            uncheckedIcon={false}\r\n                            checkedIcon={false}\r\n                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                            height={20}\r\n                            width={48}/>\r\n                </div> \r\n                \r\n            </div>\r\n\r\n            <div className='PreferenceItem'>\r\n                <div className='ItemText'>\r\n                   {trans[currentPreference.lang]['setting'][2]}\r\n                </div>\r\n                <button className={'MButton' + (isRecord ? ' start' : ' end')} \r\n                    onClick={startMicTest}>{isRecord ? trans[currentPreference.lang]['stop'] : trans[currentPreference.lang]['start']}</button>                \r\n            </div>\r\n\r\n            <div className='PreferenceItem'>\r\n                <div className='ItemText'>\r\n                    {trans[currentPreference.lang]['setting'][3]}\r\n                </div>\r\n                <div className='LogoutButton'>\r\n                    <Logout/>\r\n                </div>\r\n            </div>  \r\n\r\n            <button className=\"ApplyButton apply\" onClick={applyPreference}>{trans[currentPreference.lang]['apply']}</button>  \r\n            <button className=\"ApplyButton init\" onClick={initPreference}>{trans[currentPreference.lang]['init']}</button>     \r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Preference;","function Error() {\r\n\r\n  return (\r\n    <div>\r\n        This is Error page!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;","import { useCallback, useMemo } from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { updateLogin, updateLogout } from '../modules/LoginState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setOpen } from '../modules/ModalResult';\r\nimport { setList } from '../modules/SoundList';\r\nimport { setTextList } from '../modules/TextList';\r\nimport { setPreference } from '../modules/PreferenceResult';\r\nimport { startLoading, finishLoading } from '../modules/loading';\r\nimport axios from 'axios';\r\nimport trans from './lang';\r\nimport '../style/Login.scss';\r\n\r\nfunction Login() {\r\n    //Modal 용도\r\n    const dispatch = useDispatch();\r\n    const clientId = useMemo(() => `${process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID}`, []);\r\n    const END_POINT = useMemo(() => `${process.env.REACT_APP_END_POINT}`, []);\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n\r\n    //로그인 성공시 실행\r\n    const onSuccess = useCallback((res) => {\r\n        let userInfo = {name: res.profileObj.name, imgURL: res.profileObj.imageUrl, username: String(res.profileObj.googleId)};\r\n        dispatch(startLoading(null));\r\n        axios.post(`${END_POINT}/login`,{username: userInfo.username})\r\n        .then((response) => {\r\n            //Object.assign(userInfo, response.data);\r\n            userInfo = {...userInfo, _id: response.data._id}\r\n            const text = response.data.stt\r\n            let textList = []\r\n            for(const t of text) {\r\n                const item = {\r\n                    id : t._id,\r\n                    text : t.text\r\n                };\r\n                textList.push(item)\r\n            }\r\n            dispatch(setTextList(textList))\r\n\r\n            const audio = response.data.audio\r\n            let soundList = []\r\n            for(const a of audio) {\r\n                const item = {\r\n                    id: a._id,\r\n                    name: a.name,\r\n                    blob: JSON.stringify(Array.from(new Uint8Array(a.buffer.data))),\r\n                    score: a.sensitivity   \r\n                    };\r\n                soundList.push(item)\r\n            }\r\n            dispatch(setList(soundList))\r\n    \r\n            const pref = {\r\n                alarm: response.data.alarm,\r\n                alarmpush: response.data.alarmpush,\r\n                alarmsound: response.data.alarmsound,\r\n                alarmvolume: response.data.alarmvolume,\r\n                language: String(response.data.language).toLowerCase(),\r\n            }\r\n            dispatch(setPreference(pref));\r\n            dispatch(finishLoading(null));\r\n\r\n            const popup = {\r\n                head: trans[lang]['loginSuccess'][0],\r\n                body: `${trans[lang]['loginSuccess'][1]}${res.profileObj.name}${trans[lang]['loginSuccess'][2]}`,\r\n                buttonNum: 1,\r\n                headColor: '#22d77e',\r\n                btn1Color: '#22d77e',\r\n                btn2Color: null,\r\n                btn1Text: '#ffffff',\r\n                btn2Text: null,\r\n                callback: () => dispatch(updateLogin(userInfo)),\r\n            };\r\n            dispatch(setOpen(popup));\r\n            refreshTokenSetup(res);\r\n        })\r\n\r\n        \r\n\r\n    }, [dispatch, END_POINT, lang]);\r\n    \r\n    //로그인 실패시 실행\r\n    const onFailure = useCallback((res) => {\r\n\r\n        const popup = {\r\n            head: trans[lang]['loginFail'][0],\r\n            body: trans[lang]['loginFail'][1],\r\n            buttonNum: 1,\r\n            headColor: '#ff3547',\r\n            btn1Color: '#f2f3f4',\r\n            btn2Color: null,\r\n            btn1Text: '#000000',\r\n            btn2Text: null,\r\n            callback: () => dispatch(updateLogout()),\r\n        };\r\n        dispatch(setOpen(popup));\r\n\r\n        console.log('Login failed: res:', res);\r\n    }, [dispatch, lang]);\r\n    \r\n    //로그인후 1시간이 지나면 기존의 tokenId가 만료되기 때문에 token을 갱신.\r\n    const refreshTokenSetup = (res) => {\r\n        // Timing to renew access token\r\n        let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n      \r\n        const refreshToken = async () => {\r\n          const newAuthRes = await res.reloadAuthResponse();\r\n          refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n          console.log('newAuthRes:', newAuthRes);\r\n\r\n          // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n          localStorage.setItem('authToken', newAuthRes.id_token);\r\n      \r\n          // Setup the other timer after the first one\r\n          setTimeout(refreshToken, refreshTiming);\r\n        };\r\n      \r\n        // Setup first refresh timer\r\n        setTimeout(refreshToken, refreshTiming);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='LoginComponent'>\r\n            <div className='LoginBox'>\r\n                <div className='Favicon'>\r\n                    <img src='/faviconcircle150.png' id='loginfavicon' alt='LoginIcon'></img>\r\n                </div>\r\n                <div className='LoginText'>\r\n                    Sound Alarm\r\n                </div>\r\n                <div className='Description'>\r\n                    Sound notification service\r\n                </div>\r\n                <div className='GoogleLoginButton'>\r\n                    <GoogleLogin\r\n                        clientId={clientId}\r\n                        buttonText=\"Login with Google\"\r\n                        onSuccess={onSuccess} // 성공시 실행\r\n                        onFailure={onFailure} // 실패시 실행\r\n                        cookiePolicy={'single_host_origin'}\r\n                        />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Login;","import { useState, useCallback, useMemo, useEffect } from 'react';\r\n// test for alarm method\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateLogout } from '../modules/LoginState';\r\nimport { setLang } from '../modules/PreferenceResult';\r\nimport { setOpenDetecting } from '../modules/DetectingResult';\r\nimport Guide from './Guide';\r\nimport SoundSetting from './SoundSetting';\r\nimport TextSetting from './TextSetting';\r\nimport Preference from './Preference';\r\nimport Error from './Error';\r\nimport Login from './Login';\r\nimport trans from './lang';\r\nimport '../style/Card.scss';\r\n\r\nfunction Card() {\r\n\r\n    // 현재 선택 중인 메뉴 값\r\n    const [menu, setMenu] = useState(0);\r\n    // 선택가능한 메뉴 리스트\r\n    const [classes, setClasses] = useState(['SideButton select', 'SideButton', 'SideButton', 'SideButton'])\r\n\r\n    // login 여부\r\n    // 로그인 여부와 사용자 이름, 썸네일 이미지를 리덕스에서 가져옴\r\n    const login = useSelector(state => state.updateLoginState.login);\r\n    const userName = useSelector(state => state.updateLoginState.user.name);\r\n    const imageURL = useSelector(state => state.updateLoginState.user.imgURL);\r\n\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n    const menuList = useMemo(() => trans[lang]['menu'], [lang]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const renderMenu = useCallback(() => {\r\n        // 선택한 메뉴에 따라 다른 컴포넌트 렌더링\r\n        switch(menu){\r\n        case 0:\r\n            return <Guide/>\r\n        case 1:\r\n            return <TextSetting/>\r\n        case 2:\r\n            return <SoundSetting/>\r\n        case 3:\r\n            return <Preference/>\r\n        default:\r\n            return <Error/>\r\n        }\r\n    }, [menu])\r\n    \r\n    const selectMenu = useCallback((id) => {\r\n        // 메뉴 버튼 클릭 시 menu값 설정\r\n        if(id === menu) return;\r\n        let newClasses = [];\r\n        for(let i = 0; i < 4; i++){\r\n            if(i === menu) newClasses.push('SideButton deSelect');\r\n            else if(i === id) newClasses.push('SideButton select');\r\n            else newClasses.push('SideButton');\r\n        }\r\n        setClasses(newClasses);\r\n        setMenu(id);\r\n    }, [setMenu, menu, setClasses])\r\n    \r\n    const renderSideMenu = useCallback(() => {\r\n        // menuList의 항목을 button list로 전환\r\n        return menuList.map((item, i) => (<button id={i} \r\n                                            key={i}\r\n                                            className={classes[i]}\r\n                                            onClick={() => selectMenu(i)\r\n                                            }>{item}</button>));\r\n    }, [menuList, selectMenu, classes])\r\n\r\n    const selectLang = useCallback((lang) => {\r\n        dispatch(setLang(lang));  \r\n    }, [dispatch]);    \r\n\r\n    const renderHeader = useCallback(() => {\r\n        //Header 왼쪽에 유저 썸네일이랑 이름\r\n        return (\r\n            <div className='Header'>\r\n                <div className='InfoBox'>\r\n                    <img className='UserThumb' src={imageURL} alt='userThumb'></img>\r\n                        <div className='UserInfo'>\r\n                            {userName}\r\n                        </div>                    \r\n                </div>\r\n                <div className='Language'>\r\n                    <div className='buttonbackground'></div>\r\n                    <div className={'selectedbackground' + (lang === 'ko' ? 'left' : 'right')}></div>\r\n                    <button className={'ko' + (lang === 'ko' ? ' select' : '')} onClick={() => selectLang('ko')}>한국어</button>\r\n                    <button className={'en' + (lang === 'en' ? ' select' : '')} onClick={() => selectLang('en')}>English</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }, [imageURL, userName, lang, selectLang])\r\n\r\n    const renderLogin = () => {\r\n        return <Login/>\r\n    }\r\n\r\n    const renderDetecting = useCallback(() => {\r\n        dispatch(setOpenDetecting());\r\n    }, [dispatch])\r\n    \r\n\r\n\r\n    // 로그인이 된 상태면 메인 화면을, 아니면 로그인 화면을 보여주기 위해\r\n    // 메인 화면 렌더링을 따로 함수로 분리\r\n    const renderMainScreen = () => {\r\n        return (\r\n            <>\r\n                <div className='CardHeader'>\r\n                    {renderHeader()}\r\n                </div>\r\n                <div className='CardSide'>\r\n                    {renderSideMenu()}\r\n                </div>\r\n                <div className='CardBody'>\r\n                    {renderMenu()}\r\n                    {menu !== 3 ? <button className=\"StartButton\" onClick={renderDetecting}>{trans[lang]['detectStart']}</button> : null}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //console.log(\"Card component did mount with useEffect\")\r\n        return () => {\r\n            //console.log(\"Card component did umount with useEffect\")\r\n            dispatch(updateLogout());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n        <div className='CardComponent'>\r\n            <img className='CardFavicon' src='/favicon270.png' alt='SoundAlarmIcon'></img>\r\n            {login ? renderMainScreen() : null}\r\n            <audio style={{display: 'none'}} src='/alarm.mp3' id='alarm'/>\r\n            <div className='Reference'>\r\n            This page contains the MapleStory fontface provided by MapleStory.\r\n            <br/>\r\n            ✔ Ice Cubes Glass Sound by Daniel Simion\r\n            ✔ From\r\n            http://soundbible.com/2182-Ice-Cubes-Glass.html\r\n            ✔ Distributor \r\n            ‘대한민국 대표 BGM 셀바이뮤직’ https://www.sellbuymusic.com\r\n            <br/>\r\n            ✔ Analog Watch Alarm Sound by Daniel Simion\r\n            ✔ From\r\n            http://soundbible.com/2197-Analog-Watch-Alarm.html  \r\n            ✔ Distributor \r\n            ‘대한민국 대표 BGM 셀바이뮤직’ https://www.sellbuymusic.com\r\n          </div>\r\n        </div>\r\n        {login ? null : renderLogin()}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import { useSelector } from 'react-redux';\r\nimport ReactLoading from 'react-loading';\r\nimport '../style/App.scss';\r\n\r\nfunction Loading() {\r\n\r\n    const { loading } = useSelector(state => state.loading);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<div className='Modal'>\r\n                        <ReactLoading type={'balls'} color={'#ffffff'} height={350} width={350} className='Loading'/>\r\n                       </div>) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Loading;","import { useCallback} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setResult } from '../modules/ModalResult';\r\nimport trans from './lang';\r\nimport '../style/App.scss';\r\n\r\nfunction Modal() {\r\n\r\n    const {open, head, body, buttonNum, callback, cancelCallback, \r\n           headColor, btn1Color, btn2Color, btn1Text, btn2Text, btnText } = useSelector(state => state.setModal);\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    // ok 버튼 누르면 result를 true로 하고 callback 실행\r\n    const clickOk = useCallback(() => {\r\n        callback();\r\n        dispatch(setResult(true));\r\n    }, [dispatch, callback]);\r\n\r\n    // cancel 버튼 누르면 result false로\r\n    const clickCancel = useCallback(() => {\r\n        cancelCallback();\r\n        dispatch(setResult(false));\r\n    }, [dispatch, cancelCallback]);\r\n\r\n    const renderModal = useCallback(() => {\r\n        return (<div className='ModalBox'>\r\n                    <div className='BoxHead' style={{backgroundColor: headColor}}>{head}</div>\r\n                    <div className='BoxBody'>{typeof body === 'object' ? body[lang] : body}</div>\r\n                    <div className={'BoxButton ' + (buttonNum > 1 ? 'DoubleBox' : '')}>\r\n                        <button className='Button' onClick={clickOk} style={{backgroundColor: btn1Color, color: btn1Text}}>\r\n                            {btnText.length >= 1 ? btnText[0] : trans[lang]['ok']}\r\n                        </button>\r\n                        {buttonNum > 1 ? <button className='Button' onClick={clickCancel}\r\n                         style={{backgroundColor: btn2Color, color: btn2Text}}>\r\n                             {btnText.length >= 2 ? btnText[1] : trans[lang]['cancel']}\r\n                         </button> : null}\r\n                    </div>\r\n                </div>)\r\n    }, [clickOk, clickCancel, head, body, buttonNum, headColor, btn1Color, btn2Color, btn1Text, btn2Text, btnText, lang]);\r\n\r\n    return (\r\n        <>\r\n            {open ? (<div className='Modal'>\r\n                        {renderModal()}\r\n                       </div>) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Modal;","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setResult, getScoreServer } from '../modules/SensitivityResult';\r\nimport { updateSensitivity } from '../modules/SoundList';\r\nimport { FiCheckSquare } from 'react-icons/fi';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport toWav from 'audiobuffer-to-wav';\r\nimport trans from './lang';\r\nimport '../style/Sensitivity.scss';\r\n\r\nfunction SensitivityModal() {\r\n\r\n    const {open, id, score, name, scoreFromServer} = useSelector(state => state.setSensitivity);\r\n    const { lang } = useSelector(state => state.preferenceReducer);\r\n    const USER_ID = useSelector(state => state.updateLoginState.user._id);    \r\n    const { loading } = useSelector(state => state.loading);\r\n    const { soundList, error }= useSelector(state => state.updateSoundList);\r\n    const [curScore, setCurScore] = useState(0);\r\n    const [recorder, setRecorder] = useState(null);\r\n    const [isRecord, setIsRecord] = useState(false);\r\n    const [preventLoad, setPrevent] = useState(false);\r\n    const marks = useMemo(() => [{value: 0, label: '0'}, {value: 100, label: '100'}], []);\r\n    const dispatch = useDispatch();\r\n\r\n    const findId = useCallback(() => {\r\n        let itemId = id;\r\n        if(itemId === null) {\r\n            for(const item of soundList) {\r\n                if(item.name === name) {\r\n                    itemId = item.id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return itemId;\r\n    }, [id, name, soundList]);\r\n\r\n    const audioStop = useCallback(() => {\r\n        if(recorder === null) return;\r\n        recorder.recorder.stop();\r\n        recorder.context.close();\r\n        recorder.stream[0].stop();\r\n        setRecorder(null);\r\n        setIsRecord(false);\r\n    }, [recorder, setIsRecord, setRecorder]);\r\n\r\n    // ok 버튼 누르면 result를 true로 하고 callback 실행\r\n    const clickOk = useCallback(() => {\r\n        let itemId = findId();\r\n        setPrevent(false);\r\n        audioStop();\r\n        if(curScore === null || isNaN(curScore)) setCurScore(score);\r\n        dispatch(updateSensitivity({audioid: itemId, sensitivity: curScore, name: name, _id: USER_ID}));\r\n        dispatch(setResult(true));\r\n    }, [dispatch, findId, curScore, name, setPrevent,score, setCurScore, USER_ID, audioStop]);\r\n\r\n    // cancel 버튼 누르면 result false로\r\n    const clickCancel = useCallback(() => {\r\n        dispatch(setResult(false));\r\n        audioStop();\r\n    }, [dispatch, audioStop]);\r\n\r\n    const valuetext = useCallback((value) => {\r\n        return `${value}`;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCurScore(score);\r\n        if(error) {\r\n            clickCancel();\r\n        }\r\n    }, [score, setCurScore, error, clickCancel]);\r\n\r\n    const onChangeSlide = useCallback((e, newValue) => {\r\n        setCurScore(newValue);\r\n    }, [setCurScore]);\r\n\r\n    const audioStart = useCallback(() => {\r\n        const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n        navigator.getUserMedia(\r\n        {\r\n            audio: true,\r\n            video: false,\r\n        },\r\n  \r\n        function(stream){\r\n            const source = audioCtx.createMediaStreamSource(stream);\r\n            const dest = audioCtx.createMediaStreamDestination();\r\n            const mediaRecorder = new MediaRecorder(dest.stream);\r\n            setRecorder({recorder: mediaRecorder, context: audioCtx, stream: stream.getTracks()});\r\n            const biquadFilter = audioCtx.createBiquadFilter();\r\n\r\n            biquadFilter.type = \"bandpass\"\r\n            biquadFilter.frequency.setValueAtTime(1200, audioCtx.currentTime);\r\n            biquadFilter.Q.setValueAtTime(5, audioCtx.currentTime);\r\n\r\n            source.connect(biquadFilter);\r\n            biquadFilter.connect(dest);\r\n            let chunks = [];\r\n          \r\n            mediaRecorder.ondataavailable = function(evt) {\r\n            // push each chunk (blobs) in an array\r\n                chunks.push(evt.data);     \r\n            };\r\n\r\n            mediaRecorder.onstop = function(e) {\r\n                var blob = new Blob(chunks, { 'type' : 'audio/wav' });\r\n                blob.arrayBuffer().then(buffer => {\r\n                        audioCtx.decodeAudioData(buffer, function(b){\r\n                        let wav = toWav(b);\r\n                        //const fileData = JSON.stringify(wav);\r\n                        const blob = new Blob([wav], {type: 'audio/wav'});\r\n                        const form = new FormData();\r\n                        form.append('data', blob);\r\n                        form.append('_id', USER_ID);\r\n                        form.append('audioid', String(findId()));\r\n                        form.append('mode', 'test');\r\n                        setPrevent(true);\r\n                        dispatch(getScoreServer(form));\r\n                    })\r\n                });\r\n\r\n                chunks=[];\r\n            }\r\n\r\n            if(!isRecord) {\r\n                setIsRecord(true);\r\n                mediaRecorder.start();     \r\n            }\r\n        },\r\n  \r\n        function(err) {\r\n            console.log('The following gUM error occured: ' + err);\r\n        }\r\n        );\r\n    }, [dispatch, setRecorder, setIsRecord, findId, setPrevent, USER_ID, isRecord]);\r\n\r\n    const onMicClick = useCallback(() => {\r\n        if(isRecord) audioStop();\r\n        else audioStart();\r\n    }, [isRecord, audioStart, audioStop]);\r\n\r\n    const renderRecord = useCallback(() => {\r\n        return (\r\n            <div className='record'>\r\n                <div className='outerCircle'>\r\n                    <div className='innerCircle'></div>\r\n                </div>\r\n                <div className='recordText'>REC</div>\r\n            </div>\r\n        );\r\n    }, []);\r\n\r\n    const renderStop = useCallback(() => {\r\n        return (\r\n            <div className='stop'>\r\n                <div className='square'></div>\r\n                <div className='stopText'>STOP</div>\r\n            </div>\r\n        );\r\n    }, []);\r\n\r\n    const renderModal = useCallback(() => {\r\n        return (<div className='SensitivityBox'>\r\n                    <div className='SensitivityHead'>{`<${name}> ${trans[lang]['sensitivity'][1]}`}</div>\r\n                    <div className='SensitivityBoxBody'>\r\n                        <button className='Mic' onClick={onMicClick}>\r\n                            {isRecord ? renderStop() : renderRecord()}\r\n                        </button>\r\n                        <div className='SensitivityDetail'>\r\n                            <div className='ServerScore'>{trans[lang]['sensitivity'][2]}: {scoreFromServer ? Math.round(scoreFromServer) :\r\n                             trans[lang]['sensitivity'][3]}</div>\r\n                            <div className='SensitivitySlider' >\r\n                                <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n                                    {trans[lang]['sensitivity'][4]}\r\n                                </Typography>\r\n                                <Slider\r\n                                    value={curScore}\r\n                                    onChange={onChangeSlide}\r\n                                    getAriaValueText={valuetext}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    step={1}\r\n                                    marks={marks}\r\n                                    min={0}\r\n                                    max={100}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Description'>\r\n                        <div className='DescriptionItem'>\r\n                            <div className='GuideIcon'>\r\n                                <FiCheckSquare size={25}/> \r\n                            </div>\r\n                            <div className='Guide1'>\r\n                                {trans[lang]['sensitivity'][5]}\r\n                            </div>\r\n                        </div> \r\n                        <div className='DescriptionItem'>\r\n                            <div className='GuideIcon'>\r\n                                <FiCheckSquare size={25}/> \r\n                            </div> \r\n                            <div className='Guide2'>\r\n                                {trans[lang]['sensitivity'][6]}\r\n                            </div>\r\n                        </div> \r\n                        <div className='DescriptionItem'>\r\n                            <div className='GuideIcon'>\r\n                                <FiCheckSquare size={25}/> \r\n                            </div>\r\n                            <div className='Guide3'>\r\n                                {trans[lang]['sensitivity'][7]}\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                    <div className={'SensitivityButton SensitivityDoubleBox'}>\r\n                        <button className='Button first' onClick={clickOk}>{trans[lang]['apply']}</button>\r\n                        <button className='Button second' onClick={clickCancel}>{trans[lang]['cancel']}</button>\r\n                    </div>\r\n                </div>)\r\n    }, [clickOk, clickCancel, curScore, onChangeSlide, valuetext, scoreFromServer, onMicClick, name, isRecord, marks, renderRecord, renderStop, \r\n        lang]);\r\n\r\n    return (\r\n        <>\r\n            {(open && (!loading || preventLoad) && !error) ? (<div className='Sensitivity'>\r\n                        {renderModal()}\r\n                       </div>) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SensitivityModal;","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCloseDetecting, setResult, getMatchServer } from '../modules/DetectingResult';\r\nimport ReactLoading from 'react-loading';\r\nimport { MdClear, MdNotificationsActive, MdRefresh } from \"react-icons/md\";\r\nimport toWav from 'audiobuffer-to-wav';\r\nimport trans from './lang';\r\nimport '../style/Detecting.scss';\r\n\r\n\r\nfunction DetectingModal() { \r\n\r\n    const { open, detect, name, } = useSelector(state => state.setDetecting)\r\n    const textList = useSelector(state => state.updateTextList.textList);\r\n    const soundList = useSelector(state => state.updateSoundList.soundList)\r\n    const { sound, push, volume, lang, bell } = useSelector(state => state.preferenceReducer);\r\n    const bellTypes = useMemo(() => ({\"0\": \"/alarm.mp3\", \"1\": \"/alarm2.mp3\", \"2\": \"/alarm3.mp3\",}), []);\r\n    const USER_ID = useSelector(state => state.updateLoginState.user._id); \r\n    const [isRecord, setIsRecord] = useState(false);\r\n    const [isStart, setIsStart] = useState(false);\r\n    const [timeoutId, setTimeoutId] = useState(null);\r\n    const [recorder, setRecorder] = useState(null);\r\n    const [first, setFirst] = useState(false);\r\n    const [speech, setSpeech] = useState(null);\r\n    const [detectName, setDetectName] = useState(\"\");\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const audioStop = useCallback(() => {\r\n        if(timeoutId !== null) clearTimeout(timeoutId);\r\n        setTimeoutId(null);\r\n        if(recorder === null) return;\r\n        if(recorder.recorder.state !== 'inactive'){\r\n            recorder.recorder.stop();\r\n        }      \r\n        recorder.context.close();\r\n        for(let i = 0; i < recorder.stream.length; i++) {\r\n            recorder.stream[i].stop();\r\n        }\r\n        \r\n        setRecorder(null);\r\n        setIsRecord(false);\r\n    }, [recorder, setRecorder, setIsRecord, timeoutId, setTimeoutId]);\r\n\r\n    const clickESC = useCallback(() => {\r\n        dispatch(setCloseDetecting());\r\n        setResult({match: false, name: \"\"});\r\n        setFirst(false);\r\n        audioStop();\r\n        setIsStart(false);        \r\n    }, [dispatch, audioStop, setFirst, setIsStart]);\r\n\r\n    const audioStart = useCallback(() => {\r\n        const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n        navigator.getUserMedia(\r\n        {\r\n            audio: true,\r\n            video: false,\r\n        },\r\n  \r\n        function(stream){\r\n            const source = audioCtx.createMediaStreamSource(stream);\r\n            const dest = audioCtx.createMediaStreamDestination();\r\n            const mediaRecorder = new MediaRecorder(dest.stream);\r\n            setRecorder({recorder: mediaRecorder, context: audioCtx, stream: stream.getTracks()});\r\n            const biquadFilter = audioCtx.createBiquadFilter();\r\n            biquadFilter.type = \"bandpass\"\r\n            biquadFilter.frequency.setValueAtTime(1200, audioCtx.currentTime);\r\n            biquadFilter.Q.setValueAtTime(5, audioCtx.currentTime);\r\n            source.connect(biquadFilter);\r\n            biquadFilter.connect(dest);\r\n            var chunks = [];\r\n          \r\n            mediaRecorder.ondataavailable = function(evt) {\r\n            // push each chunk (blobs) in an array\r\n                chunks.push(evt.data);\r\n                //console.log(Math.max(...chunks));   \r\n            };\r\n\r\n            mediaRecorder.onstop = function(e) {\r\n                var blob = new Blob(chunks, { 'type' : 'audio/wav' });\r\n                blob.arrayBuffer().then(buffer => {\r\n                    audioCtx.decodeAudioData(buffer, function(b){\r\n                        let wav = toWav(b);\r\n                        const blob = new Blob([wav], {type: 'audio/wav'});\r\n                        const form = new FormData();\r\n                        form.append('data', blob);\r\n                        form.append('_id', USER_ID);\r\n                        form.append('mode', 'compare');\r\n                        dispatch(getMatchServer(form));\r\n\r\n                        mediaRecorder.start();\r\n                        clearTimeout(timeoutId);\r\n                        const timeId = setTimeout(() => {\r\n                            mediaRecorder.stop();\r\n                        }, 10000);\r\n                        setTimeoutId(timeId); \r\n\r\n                    }, function(e) {\r\n                        return;\r\n                    })\r\n                });\r\n\r\n                chunks=[];\r\n            }\r\n\r\n            if(!isRecord) {\r\n                setIsRecord(true);\r\n                mediaRecorder.start();\r\n                const timeId = setTimeout(() => {\r\n                    mediaRecorder.stop();\r\n                }, 10000);\r\n                setTimeoutId(timeId);     \r\n            }\r\n        },\r\n  \r\n        function(err) {\r\n            console.log('The following gUM error occured: ' + err);\r\n        }\r\n        );\r\n    }, [setRecorder, USER_ID, isRecord, timeoutId, setIsRecord, setTimeoutId, dispatch]);\r\n\r\n    const stopStt = useCallback(() => {\r\n        if(speech === null) return;\r\n        if(!detect && open) {\r\n            speech.start();\r\n        }\r\n        else {\r\n            speech.stop();\r\n            setSpeech(null);\r\n            speech.stop();\r\n        }\r\n        \r\n    }, [setSpeech, speech, detect, open]);\r\n\r\n    const startSTT = useCallback(() => {\r\n        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n\r\n        recognition.interimResults = true;\r\n        recognition.lang = lang === 'ko' ? 'ko-KR' : 'en-US';\r\n        setSpeech(recognition);\r\n        recognition.start();\r\n\r\n        recognition.onresult = (e) => {\r\n            let texts = String(Array.from(e.results)\r\n            .map(result => result[0].transcript).join(\"\"));\r\n            const split = texts.split(\" \");\r\n            for(const text of split) {\r\n                for(const t of textList) {\r\n                    if(t.text === text) {\r\n                        dispatch(setResult({match: true, name: text}));\r\n                        recognition.stop();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [textList, dispatch, lang,]);\r\n\r\n    const clickDetect = useCallback(() => {\r\n        if(!detect && !first) return;\r\n        dispatch(setResult({match: false, name: \"\"}));\r\n        setFirst(false);\r\n        audioStart();\r\n        startSTT();\r\n    }, [dispatch, setFirst, audioStart, startSTT, detect, first]);\r\n\r\n    const testAlarm = useCallback(() => {\r\n        if(sound){\r\n            const sound = document.getElementById('alarm');\r\n            sound.src = bellTypes[bell];\r\n            sound.volume = volume / 100;\r\n            sound.play();\r\n        }\r\n\r\n        if(push){\r\n            var options = {\r\n                body: name + \" \" + trans[lang]['push'][0],\r\n                icon: \"/faviconcircle.png\",\r\n                dir: \"ltr\"\r\n            };\r\n            \r\n            new Notification(\"Sound Alarm!\", options);\r\n        }\r\n    }, [push, sound, volume, bell, bellTypes, name, lang]);\r\n\r\n    const setDetected = useCallback(() => {\r\n        if(String(name).length > 0) setDetectName(String(name));\r\n    }, [name, setDetectName]);\r\n\r\n    useEffect(() => {\r\n        if(open && !isStart) {\r\n            setIsStart(true);\r\n            if(soundList.length > 0) audioStart();\r\n            if(textList.length > 0) startSTT();\r\n        }\r\n        if(!open) {\r\n            audioStop();\r\n            stopStt();            \r\n        }\r\n\r\n        if(detect && !first && open) {\r\n            setFirst(true);\r\n            setDetected();\r\n            audioStop();\r\n            stopStt();\r\n            testAlarm();            \r\n        }\r\n\r\n        if(speech !== null) {\r\n            speech.onend = () => {\r\n                stopStt();                \r\n            }\r\n        }\r\n    }, [audioStart, audioStop, open, isStart, setIsStart, detect, testAlarm, first, setFirst, startSTT, stopStt,\r\n         soundList, textList, speech, setDetected]);\r\n\r\n    const renderTLI = useCallback((i, idx) => {\r\n        return <div className='DetectTextListItem' key={idx}>{i}</div>\r\n    }, []);\r\n\r\n    const renderSLI = useCallback((i, idx) => {\r\n        return <div className='DetectSoundListItem' key={idx}>{i}</div>\r\n    }, []);\r\n\r\n    const renderTextList = useCallback(() => {\r\n        if(textList.length === 0){\r\n            return;\r\n        }\r\n    \r\n        return (textList.map((ele, idx) => renderTLI(ele.text, idx)));\r\n    }, [textList, renderTLI])\r\n\r\n    const renderSoundList = useCallback(() => {\r\n        if(soundList.length === 0){\r\n            return;\r\n        }\r\n    \r\n        return (soundList.map((ele, idx) => renderSLI(ele.name, idx)));\r\n    }, [soundList, renderSLI]);\r\n\r\n\r\n    const renderModal = useCallback(() => {\r\n        return (<div className='DetectingBox'>\r\n                    <div className='Retry'>\r\n                        <MdRefresh onClick={clickDetect} size={50}/>\r\n                    </div>\r\n                    <div className='DetectingHead'>\r\n                        <button className='ESC' onClick={clickESC}><MdClear size={35}/></button>\r\n                    </div>\r\n                    <div className='DetectingBoxBody'>\r\n                        <div className='ProgressIcon'>{detect || first ? <MdNotificationsActive size={100}/> : (<ReactLoading type={'spinningBubbles'} color={'#383838'} width={100} />)}</div>\r\n                        <div className='ProgressText'>{detect || first ? (detectName + \" \" + trans[lang]['detecting'][1]) : trans[lang]['detecting'][0] }</div>\r\n                    </div>\r\n                    <div className='DetectInfo'>\r\n                        <div className='DetectInfoText'>{trans[lang]['detecting'][3]}\r\n                            <div className='DetectTextList'>{renderTextList()}</div>\r\n                        </div>\r\n                        <div className='DetectInfoSound'>{trans[lang]['detecting'][2]}\r\n                            <div className='DetectSoundList'>{renderSoundList()}</div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n    }, [clickESC, clickDetect, renderTextList, renderSoundList, detect, first, lang, detectName]);\r\n\r\n\r\n    return (\r\n        <>\r\n                {open ? (<div className='Detecting'>\r\n                    {renderModal()}\r\n                    </div>) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetectingModal;","import Card from './components/Card';\r\nimport Loading from './components/Loading';\r\nimport Modal from './components/Modal';\r\nimport SensitivityModal from './components/SensitivityModal';\r\nimport DetectingModal from './components/DetectingModal';\r\nimport './style/App.scss';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n      <div className='App'>\r\n          <Card/>\r\n          <SensitivityModal/>\r\n          <DetectingModal/>\r\n          <Loading/>\r\n          <Modal/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport { all } from 'redux-saga/effects';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport updateSoundList, {soundSaga} from './SoundList';\r\nimport setModal from './ModalResult';\r\nimport preferenceReducer, { preferenceSaga } from './PreferenceResult';\r\nimport updateTextList, { textSaga } from './TextList';\r\nimport updateLoginState from './LoginState';\r\nimport loading from './loading';\r\nimport setSensitivity, { sensitivitySaga } from './SensitivityResult';\r\nimport setDetecting, { detectingSaga } from './DetectingResult';\r\n\r\nconst config = {\r\n    key: 'root',\r\n    storage,\r\n};\r\n\r\n// root reducer를 위한 combine\r\n// 새로운 reducer 만들면 여기에 하나씩 추가하면 됨\r\nconst rootReducer = combineReducers({\r\n    updateSoundList,\r\n    setModal,\r\n    preferenceReducer,\r\n    updateTextList,\r\n    updateLoginState,\r\n    loading,\r\n    setSensitivity,\r\n    setDetecting,\r\n    // 추가 ...\r\n});\r\n\r\nexport function* rootSaga() {\r\n    yield all([soundSaga(), sensitivitySaga(), preferenceSaga(), textSaga(), detectingSaga()]);\r\n}\r\n\r\nexport default persistReducer(config, rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport rootReducer, { rootSaga } from './modules';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: ['MaplestoryLight', 'MaplestoryBold']\r\n  },\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nconst persistor = persistStore(store);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MuiThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider> \r\n    </MuiThemeProvider>\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}